<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>chmod +x singularity.sh</title><link>http://bt3gl.github.io/</link><description></description><atom:link href="http://bt3gl.github.io/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 31 Dec 2018 00:00:00 -0500</lastBuildDate><item><title>Droning the World</title><link>http://bt3gl.github.io/droning-the-world.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/sun.png" width="400px" /&gt;&lt;/p&gt;
&lt;p&gt;2018 was a prime nomadic time for me. And droning time as well üíÅüèº‚Äç‚ôÄÔ∏è. &lt;/p&gt;
&lt;p&gt;Here some of the art I created this year.&lt;/p&gt;
&lt;p&gt;Hope you enjoy, let me know which one is your favorite!&lt;/p&gt;
&lt;h1&gt;Tiny Jaws (Maui)&lt;/h1&gt;
&lt;iframe title="vimeo-player" src="https://player.vimeo.com/video/297056325" width="640" height="360" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;Haleiwa Dreams (Oahu)&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/272116715" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;Life is all about you &amp;amp; Not at all about (California, Mammoth Moutains)&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/285146753" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;Hawai‚Äôi Aerial Reel (Oahu)&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/280851784" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;Surf &amp;amp; Chill in Malibu&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/271743314" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;Go Skateboarding Day w/ Sierra Prescott (Los Angeles)&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/274809384" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;Santa Monica Daze (Los Angeles)&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/272891738" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;It‚Äôs Summer in the Pipe! (Oahu)&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/269465467" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Mon, 31 Dec 2018 00:00:00 -0500</pubDate><guid>tag:bt3gl.github.io,2018-12-31:droning-the-world.html</guid></item><item><title>Mahalo and Farewell</title><link>http://bt3gl.github.io/mahalo-and-farewell.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/bt2.png" width="400px" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;To exist is to change, to change is to mature, to mature is to go on creating oneself endlessly.&lt;/em&gt; - Henri Bergson&lt;/p&gt;
&lt;h3&gt;Hi there, folks üëãüèº&lt;/h3&gt;
&lt;p&gt;In the past few years, I have been working in many environments, from big corporations to small startups. And with seniority, I have been spending most of my time on complex and private projects. At this point it's clear for me that it's time to say goodbye to &lt;strong&gt;&lt;a href="http://marinasteinkirch.com"&gt;chmod a+x singularity&lt;/a&gt;&lt;/strong&gt;. &lt;/p&gt;
&lt;h4&gt;But it's fun to look back and think about our journeys!&lt;/h4&gt;
&lt;p&gt;I started this website in 2014 when I was about to graduate from &lt;strong&gt;&lt;a href="http://www.astro.sunysb.edu/steinkirch/index.html"&gt;my Ph.D. in Physics in Stony Brook&lt;/a&gt;&lt;/strong&gt;. Those were the days when I was so so thirsty about learning everything about computers! I wrote an entire book on &lt;strong&gt;&lt;a href="https://github.com/bt3gl/Python-and-Algorithms-and-Data-Structures"&gt;Python &amp;amp; Algorithms&lt;/a&gt;&lt;/strong&gt;, and I was playing &lt;strong&gt;&lt;a href="https://ctftime.org/stats/2014"&gt;CTF intensively and top 30 at CTFTimes.org&lt;/a&gt;&lt;/strong&gt;. I had that üî• to learn everything and write about everything (hence the &lt;strong&gt;&lt;a href="http://marinasteinkirch.com/archives.html"&gt;variety of topics that this blog has&lt;/a&gt;&lt;/strong&gt; üòÖ). &lt;/p&gt;
&lt;p&gt;Creating nerdy websites has been a trend in my life. I wrote my first (&lt;strong&gt;&lt;a href="https://get.adobe.com/flashplayer/about/"&gt;Flash&lt;/a&gt;&lt;/strong&gt;) website when I was 11:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/gJ6t8Ogstfc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Funny how I had texts on AI and C++ and Java back then... Certain things don't change (but &lt;strong&gt;MP3s&lt;/strong&gt; do ü§£).&lt;/p&gt;
&lt;p&gt;Then I created another website when &lt;strong&gt;&lt;a href="http://marinasteinkirch.com/projects_page/index.html"&gt;I was in college&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/w2.png" width="400px" /&gt;&lt;/p&gt;
&lt;p&gt;And then when I was in &lt;strong&gt;&lt;a href="http://www.astro.sunysb.edu/steinkirch/index.html"&gt;my Ph.D.&lt;/a&gt;&lt;/strong&gt; (so many papers in this one!). &lt;/p&gt;
&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/w1.png" width="400px" /&gt;&lt;/p&gt;
&lt;p&gt;Finally, I wrote &lt;strong&gt;singularity.sh&lt;/strong&gt;, and I feel like my journey has ended with style üëæ.&lt;/p&gt;
&lt;p&gt;Thank you all for following my work, for reading my posts, and for cheering my story. It has been an honor to be here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Ô∏è- Ô∏è ‚ô•Ô∏è Mia or Marina or Bt3gl or bt3 or bytegirl ‚ô•Ô∏è&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;Ps: In case you already miss me, here a list of posts that I had the most fun writing:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/introducing-amigo-a-tool-to-manage-google-cloud-platform-security.html"&gt;Introducing Amigo, a tool to manage Google Cloud Platform Security&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/wiresharking-for-fun-or-profit.html"&gt;Wireshark for fun or profit&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/the-ultimate-linux-guide-for-hackers.html"&gt;The Ultimate Linux Guide for Hackers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/the-effects-of-convolutional-neural-networks-on-a-hot-summer-night.html"&gt;The effects of Convolutional Neural Networks on a Hot Summer Night&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/introducing-threat-intel.html"&gt;Introducing Threat Intel&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/a-tor-proxy-in-a-raspberry-pi.html"&gt;A Tor Proxy in a Raspberry Pi&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/ouroboros-statement.html"&gt;Ouroboros Statement&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/black-hat-python-infinite-possibilities-with-the-scapy-module.html"&gt;Black Hat Python: Infinite possibilities with the Scapy Module&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/black-hat-python-building-a-udp-scanner.html"&gt;Black Hat Python: Building a UDP Scanner&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/understanding-the-shellshock-vulnerability.html"&gt;Understanding the Shellshock Vulnerability&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/the-first-stripe-ctf.html"&gt;Stripe's First CTF&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/lots-of-astrophysics-for-you.html"&gt;Lots of Astrophysics for You&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/exploiting-the-web-in-20-lessons-natas.html"&gt;Exploiting the Web in 20 Lessons&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marinasteinkirch.com/smashing-the-stack-for-fun-or-wargames-narnia-0-4.html"&gt;Smashing the Stack for Fun or WarGames&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Mon, 31 Dec 2018 00:00:00 -0500</pubDate><guid>tag:bt3gl.github.io,2018-12-31:mahalo-and-farewell.html</guid></item><item><title>Skaffold is a Kool K8s Tool!</title><link>http://bt3gl.github.io/skaffold-is-a-kool-k8s-tool.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="270px" src="./cyberpunk/w2.jpeg" width="390px" /&gt;&lt;/p&gt;
&lt;p&gt;I recently found out about &lt;a href="https://skaffold.dev/"&gt;Skaffold&lt;/a&gt;, a command-line tool &lt;a href="https://www.infoq.com/news/2018/03/skaffold-kubernetes"&gt;recently released by Google&lt;/a&gt;, and designed to make local Kubernetes development very easy, allowing for iterative local development against a Kubernetes cluster. It's really cool, check this out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It runs as a binary in your local machine (e.g., &lt;a href="https://formulae.brew.sh/formula/skaffold"&gt;easy install with brew&lt;/a&gt;, etc.).&lt;/li&gt;
&lt;li&gt;It uses &lt;code&gt;yaml&lt;/code&gt; configuration to describe how your application should be built: you specify the Docker images for your service(s) and Skaffold will tag them and push them to any valid Docker image repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apiVersion&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;skaffold&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;v1beta9&lt;/span&gt;
&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Config&lt;/span&gt;
&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;artifacts&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gcr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;io&lt;/span&gt;&lt;span class="sr"&gt;/k8s-skaffold/s&lt;/span&gt;&lt;span class="n"&gt;kaffold&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;
&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;kubectl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;manifests&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;k8s&lt;/span&gt;&lt;span class="o"&gt;-*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;These images are ingested into your Kubernetes manifest and used to deploy changes to the clusters for every code change.&lt;/li&gt;
&lt;li&gt;Skaffold &lt;strong&gt;watches your local development directory for filesystem changes&lt;/strong&gt; and automatically builds and deploy your application to any local or remote Kubernetes cluster.&lt;/li&gt;
&lt;li&gt;It is integrated to &lt;code&gt;kubectl&lt;/code&gt; and &lt;a href="https://cloud.google.com/gcp"&gt;GCP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Skaffold not only works on your laptop as a dev tool, it also lets you reuse the same &lt;code&gt;skaffold.yaml&lt;/code&gt; file to do deployments to your clusters in your continuous deployment system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In resume, Skaffold makes development very easy: all you need to do is run &lt;code&gt;skaffold dev&lt;/code&gt; (local dev workflow: &lt;a href="https://kubernetes.io/docs/setup/minikube/"&gt;Minikube&lt;/a&gt;, etc.) or &lt;code&gt;skaffold run&lt;/code&gt; (continuous dev workflow: &lt;a href="https://jenkins.io/"&gt;Jenkins&lt;/a&gt;, &lt;a href="https://travis-ci.org/"&gt;Travis CI&lt;/a&gt;, etc.) to start the entire process, creating Kubernetes pod(s) in a cluster with the Docker images of your application.&lt;/p&gt;
&lt;p&gt;In this single command, Skaffold:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;builds container images (locally or remotely),&lt;/li&gt;
&lt;li&gt;pushes container images if the target is not local cluster,&lt;/li&gt;
&lt;li&gt;updates Kubernetes manifests with image tags,&lt;/li&gt;
&lt;li&gt;deploys your application with &lt;code&gt;kubectl apply&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;streams logs from the pods,&lt;/li&gt;
&lt;li&gt;watches for changes in the source code and Kubernetes manifests, and then repeat 1-5.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;Some learning references&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://skaffold.dev/"&gt;Official documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/blog/products/gcp/introducing-skaffold-easy-and-repeatable-kubernetes-development?hl=is"&gt;Skaffold &amp;amp; GCP documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleContainerTools/skaffold"&gt;Github repository with examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://skaffold.dev/docs/references/yaml/"&gt;Skaffold Yaml References&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleContainerTools/skaffold/tree/master/examples"&gt;Skaffold examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ahmetb/skaffold-from-laptop-to-cloud"&gt;Skaffold: From code on your laptop to cloud&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ahmet.im/blog/skaffold/"&gt;Skaffold: happy Kubernetes workflows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.bejarano.io/how-to-write-great-container-images.html"&gt;How to write great container images&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Tue, 09 Jan 2018 05:00:00 -0500</pubDate><guid>tag:bt3gl.github.io,2018-01-09:skaffold-is-a-kool-k8s-tool.html</guid><category>docker</category><category>microservices</category><category>skaffold</category></item><item><title>So, What is GitOps?</title><link>http://bt3gl.github.io/so-what-is-gitops.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="270px" src="./cyberpunk/container.png" width="390px" /&gt;&lt;/p&gt;
&lt;p&gt;In general, there are two ways to deploy infrastructure changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Procedural way&lt;/strong&gt;: telling some tool what to do, e.g.: &lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt; (a glorified SSH). This is also known as a &lt;em&gt;push model&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Declarative way&lt;/strong&gt;: telling some tool what you want to have done, also known as &lt;em&gt;infrastructure as code&lt;/em&gt;, e.g.: &lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; and &lt;a href="https://www.pulumi.com/"&gt;Pulumi&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;GitOps&lt;/strong&gt; is a term created by &lt;a href="https://www.weave.works/technologies/gitops/"&gt;WeWorks&lt;/a&gt; and works by using Git as a source of truth for &lt;em&gt;declarative&lt;/em&gt; infrastructure and applications. Automated CI/CD pipelines roll out changes to your infrastructure after commits are pushed and approved in Git. This model is becoming a popular operating way for building applications on Kubernetes. &lt;/p&gt;
&lt;p&gt;&lt;img alt="cyberpunk" height="270px" src="./cyberpunk/gitiops1.png" width="390px" /&gt;&lt;/p&gt;
&lt;p&gt;In GitOps you only push code. The developer interacts with the source control, which triggers the CI/CD tool (e.g. &lt;a href="https://jenkins.io/"&gt;Jenkins&lt;/a&gt; or &lt;a href="https://circleci.com"&gt;CicleCI&lt;/a&gt;), and this pushes the docker image to the container register (e.g. &lt;a href="https://hub.docker.com/"&gt;docker hub&lt;/a&gt;). So you can see the Docker image as an artifact! &lt;/p&gt;
&lt;p&gt;To deploy that Docker image, you have a different &lt;strong&gt;config repository&lt;/strong&gt; which contains the k8s manifests. The CI/CD tool sends a pull request, and when it is merged, a &lt;strong&gt;magic pod&lt;/strong&gt; in the k8s cluster pulls the image to the cluster (similar to &lt;code&gt;kubectl apply&lt;/code&gt;, the popular &lt;a href="https://kubernetes.io/docs/reference/kubectl/kubectl/"&gt;k8s management tool&lt;/a&gt;, or even &lt;code&gt;helm update&lt;/code&gt;, another popular &lt;a href="https://helm.sh/"&gt;k8s production tool&lt;/a&gt;). &lt;/p&gt;
&lt;p&gt;Everything is controlled through pull requests. You push code, not containers. &lt;/p&gt;
&lt;p&gt;Wait, but what is this &lt;strong&gt;magic pod&lt;/strong&gt;? Glad you ask: the magic is performed by a tool called &lt;a href="https://github.com/fluxcd/flux"&gt;Flux&lt;/a&gt;, which automatically ensures that the state of a cluster matches the config in Git. It uses an operator in the cluster to trigger deployments inside Kubernetes, which means you don't need a separate CI/CD tool. It monitors all relevant image repositories, detects new images, triggers deployments, and updates the desired running configuration based on that.&lt;/p&gt;
&lt;p&gt;So, ultimately, the key advantages of GitOps models are: increased productivity and stabilities, higher reliability, and standardization. But mostly, no more manual &lt;code&gt;kubectl&lt;/code&gt; commands anymore!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Fri, 22 Sep 2017 09:00:00 -0400</pubDate><guid>tag:bt3gl.github.io,2017-09-22:so-what-is-gitops.html</guid><category>k8s</category><category>scalability</category><category>gitops</category><category>flux</category></item><item><title>So, What is a DevOps Engineer?</title><link>http://bt3gl.github.io/so-what-is-a-devops-engineer.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/444.jpeg" width="400px" /&gt;&lt;/p&gt;
&lt;p&gt;Rad thing about working in startup engineering teams is that you can wear several hats. Let us talk about the &lt;a href="(https://en.wikipedia.org/wiki/DevOps)"&gt;DevOps&lt;/a&gt; üé© today.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;DevOps is a set of software development practices that combine software development (Dev) and information-technology operations (Ops) to shorten the systems-development life cycle while delivering features, fixes, and updates frequently in close alignment with business objectives.&lt;/em&gt; - Wikipedia&lt;/p&gt;
&lt;p&gt;And that describes it pretty well, but what kind of tasks would you be doing and what kind of technologies and software would you use? &lt;/p&gt;
&lt;p&gt;Now, this is going to be from my personal experience, yours might differ, but the basic principles should be there.&lt;/p&gt;
&lt;p&gt;These are the tasks for a DevOps engineer:&lt;/p&gt;
&lt;h2&gt;Local development&lt;/h2&gt;
&lt;p&gt;Create a local development platform.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set up a local development environment in a Virtual machine (like Virtualbox with Vagrant).&lt;/li&gt;
&lt;li&gt;Set up Docker &amp;amp; Docker compose for developers to copy and run and develop their applications in.&lt;/li&gt;
&lt;li&gt;Set up a skeleton of one of the applications/frameworks that the Developers work with to develop in.&lt;/li&gt;
&lt;li&gt;Document the above setup and make it easy to get started, preferably with one, or a few commands.&lt;/li&gt;
&lt;li&gt;Pick a favorite shell (e.g., ZSH) and have scripts for all repetitive tasks and have aliases in your profile &lt;a href="https://github.com/bt3gl/Shell-Scripts_and_Dotfiles"&gt;dotfile&lt;/a&gt; (e.g. &lt;code&gt;~/.zshrc&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Setup CI servers and deploy jobs to make it super easy to deploy, with as little hands-on for each deploy as possible, using tools like: Jenkins and CircleCI.&lt;/li&gt;
&lt;li&gt;Setup test servers that run tests when the CI deployjob runs at every commit or before a deployment for example.&lt;/li&gt;
&lt;li&gt;Setup security checks in CI deployjobs and scan Docker containers for vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Infrastructure&lt;/h2&gt;
&lt;p&gt;Setup production &amp;amp; stage servers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setup these servers using whatever kind of &lt;a href="https://github.com/bt3gl/Data-Pipelines"&gt;infrastructure&lt;/a&gt; your company uses, like: &lt;a href="https://github.com/bt3gl/Intro_to_Kubernetes"&gt;Kubernetes&lt;/a&gt;, OpenShift, and Amazon AWS (or Microsoft Azure, or GCP). Use tools such as Skaffold and AWS SAM.&lt;/li&gt;
&lt;li&gt;Use automatic tools that define your infrastructure as code or configuration files to set up your servers: Terraform, Ansible, Puppet.&lt;/li&gt;
&lt;li&gt;Configure the software needed for your applications to run like: Apache, Nginx, MySQL / MariaDB, Elasticsearch.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Logging and Monitoring&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Setup servers for aggregated Logging using something like ELK Stack.&lt;/li&gt;
&lt;li&gt;Setup monitoring for your infrastructure with tools like Prometheus and &lt;a href="https://github.com/bt3gl/awesome-grafana"&gt;Grafana&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Setup monitoring for your applications with tools like ElastAlert and Pingdom.&lt;/li&gt;
&lt;li&gt;Integrate everything with Slack.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Setup backups for files and databases in Cronjobs.&lt;/li&gt;
&lt;li&gt;Setup mailservers.&lt;/li&gt;
&lt;li&gt;Do regular security maintenance on all the infrastructure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;--&lt;/p&gt;
&lt;p&gt;Once you have everything set, you can sit back and enjoy the view üòÖ.&lt;/p&gt;
&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/lol.png" width="400px" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Fri, 10 Feb 2017 02:00:00 -0500</pubDate><guid>tag:bt3gl.github.io,2017-02-10:so-what-is-a-devops-engineer.html</guid></item></channel></rss>