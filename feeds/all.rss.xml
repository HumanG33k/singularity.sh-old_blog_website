<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>chmod +x singularity.sh</title><link>http://bt3gl.github.io/</link><description></description><atom:link href="http://bt3gl.github.io/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 02 Apr 2018 05:00:00 -0400</lastBuildDate><item><title>Skaffold is a Kool K8s Tool!</title><link>http://bt3gl.github.io/skaffold-is-a-kool-k8s-tool.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="270px" src="./cyberpunk/w2.jpeg" width="390px" /&gt;&lt;/p&gt;
&lt;p&gt;I recently found out about &lt;a href="https://skaffold.dev/"&gt;Skaffold&lt;/a&gt;, a command-line tool &lt;a href="https://www.infoq.com/news/2018/03/skaffold-kubernetes"&gt;recently released by Google&lt;/a&gt;, and designed to make local Kubernetes development very easy, allowing for iterative local development against a Kubernetes cluster. It's really cool, check this out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It runs as a binary in your local machine (e.g., &lt;a href="https://formulae.brew.sh/formula/skaffold"&gt;easy install with brew&lt;/a&gt;, etc.).&lt;/li&gt;
&lt;li&gt;It uses &lt;code&gt;yaml&lt;/code&gt; configuration to describe how your application should be built: you specify the Docker images for your service(s) and Skaffold will tag them and push them to any valid Docker image repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apiVersion&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;skaffold&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;v1beta9&lt;/span&gt;
&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Config&lt;/span&gt;
&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;artifacts&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gcr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;io&lt;/span&gt;&lt;span class="sr"&gt;/k8s-skaffold/s&lt;/span&gt;&lt;span class="n"&gt;kaffold&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;
&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;kubectl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;manifests&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;k8s&lt;/span&gt;&lt;span class="o"&gt;-*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;These images are ingested into your Kubernetes manifest and used to deploy changes to the clusters for every code change.&lt;/li&gt;
&lt;li&gt;Skaffold &lt;strong&gt;watches your local development directory for filesystem changes&lt;/strong&gt; and automatically builds and deploy your application to any local or remote Kubernetes cluster.&lt;/li&gt;
&lt;li&gt;It is integrated to &lt;code&gt;kubectl&lt;/code&gt; and &lt;a href="https://cloud.google.com/gcp"&gt;GCP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Skaffold not only works on your laptop as a dev tool, it also lets you reuse the same &lt;code&gt;skaffold.yaml&lt;/code&gt; file to do deployments to your clusters in your continuous deployment system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In resume, Skaffold makes development very easy: all you need to do is run &lt;code&gt;skaffold dev&lt;/code&gt; (local dev workflow: &lt;a href="https://kubernetes.io/docs/setup/minikube/"&gt;Minikube&lt;/a&gt;, etc.) or &lt;code&gt;skaffold run&lt;/code&gt; (continuous dev workflow: &lt;a href="https://jenkins.io/"&gt;Jenkins&lt;/a&gt;, &lt;a href="https://travis-ci.org/"&gt;Travis CI&lt;/a&gt;, etc.) to start the entire process, creating Kubernetes pod(s) in a cluster with the Docker images of your application.&lt;/p&gt;
&lt;p&gt;In this single command, Skaffold:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;builds container images (locally or remotely),&lt;/li&gt;
&lt;li&gt;pushes container images if the target is not local cluster,&lt;/li&gt;
&lt;li&gt;updates Kubernetes manifests with image tags,&lt;/li&gt;
&lt;li&gt;deploys your application with &lt;code&gt;kubectl apply&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;streams logs from the pods,&lt;/li&gt;
&lt;li&gt;watches for changes in the source code and Kubernetes manifests, and then repeat 1-5.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;Some learning references&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://skaffold.dev/"&gt;Official documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/blog/products/gcp/introducing-skaffold-easy-and-repeatable-kubernetes-development?hl=is"&gt;Skaffold &amp;amp; GCP documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleContainerTools/skaffold"&gt;Github repository with examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://skaffold.dev/docs/references/yaml/"&gt;Skaffold Yaml References&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleContainerTools/skaffold/tree/master/examples"&gt;Skaffold examples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ahmetb/skaffold-from-laptop-to-cloud"&gt;Skaffold: From code on your laptop to cloud&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ahmet.im/blog/skaffold/"&gt;Skaffold: happy Kubernetes workflows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.bejarano.io/how-to-write-great-container-images.html"&gt;How to write great container images&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Mon, 02 Apr 2018 05:00:00 -0400</pubDate><guid>tag:bt3gl.github.io,2018-04-02:skaffold-is-a-kool-k8s-tool.html</guid><category>docker</category><category>microservices</category><category>skaffold</category></item><item><title>Introducing Amigo, a tool to manage Google Cloud Platform Security</title><link>http://bt3gl.github.io/introducing-amigo-a-tool-to-manage-google-cloud-platform-security.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/27.jpg" width="400px" /&gt;&lt;/p&gt;
&lt;p&gt;I wrote a tool called &lt;a href="https://github.com/bt3gl/Amigo-Google-Cloud-Platform-Security"&gt;Amigo&lt;/a&gt; that uses the GCP API to fetch an organization's project data and, with a set of customizable rules, searches for security risks!&lt;/p&gt;
&lt;h2&gt;How Amigo Works&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;i)&lt;/strong&gt; Amigo retrieves the GCP project list and their attributes (defined in a &lt;code&gt;config.yaml&lt;/code&gt; file).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ii)&lt;/strong&gt; For each attribute in a project, Amigo creates an updated report. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iii)&lt;/strong&gt; Amigo checks the previous report for differences (verifying when the data was modified). If there is a diff, Amigo logs the report for this diff.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iv)&lt;/strong&gt; Amigo saves the resources data in a database, and then it checks the custom rules specified in &lt;code&gt;rules.yaml&lt;/code&gt;, reporting everything that violates those rules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;v)&lt;/strong&gt; The &lt;strong&gt;science&lt;/strong&gt; generated by Amigo can be fed into ELK.&lt;/p&gt;
&lt;h2&gt;Setting up and Running Amigo&lt;/h2&gt;
&lt;h3&gt;Setting a Virtual Environment&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Installing Amigo&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creating a Service Account&lt;/h3&gt;
&lt;p&gt;It should be done once, for the first time you run Amigo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a project and a service account at &lt;a href="https://console.cloud.google.com/iam-admin/serviceaccounts"&gt;https://console.cloud.google.com/iam-admin/serviceaccounts&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the IAM roles &lt;strong&gt;Security Reviewer&lt;/strong&gt; and &lt;strong&gt;Viewer permissions&lt;/strong&gt; to the service account.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download the &lt;strong&gt;Service Account JSON credential file&lt;/strong&gt; to a safe directory (e.g. your home directory). If amigo runs in other machines (or other people in the same organization is running Amigo), this key can be shared (and step 1. and 2. do not need to be repeated).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Setting gcloud&lt;/h3&gt;
&lt;p&gt;Install &lt;a href="https://cloud.google.com/sdk/downloads"&gt;gcloud SDK&lt;/a&gt; and authenticate with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;gcloud&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also check whether env variable &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; is pointing to the &lt;strong&gt;Service Account JSON credential file&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;Setting the Config file&lt;/h3&gt;
&lt;p&gt;Copy &lt;code&gt;config.yaml_example&lt;/code&gt; to &lt;code&gt;config.yaml&lt;/code&gt; and customize it.&lt;/p&gt;
&lt;p&gt;In the bottom of this file you can edit the attributes that you want to report on:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;### Attributes to inspect&lt;/span&gt;
&lt;span class="nl"&gt;gcp_attributes:&lt;/span&gt;
    &lt;span class="nl"&gt;compute:&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;firewalls&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;networks&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;snapshots&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Setting the Rules file&lt;/h3&gt;
&lt;p&gt;Inspect &lt;code&gt;rules.yaml&lt;/code&gt; either removing or adding rules that should be searched in the reports.&lt;/p&gt;
&lt;h3&gt;Running Amigo&lt;/h3&gt;
&lt;p&gt;Run amigo with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;amigo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This retrieves the data from GCP and generates JSON reports. These reports will be saved where is &lt;code&gt;reports_dir&lt;/code&gt; in the config file.&lt;/p&gt;
&lt;p&gt;It is advised to watch for STERR and STDOUT in the &lt;code&gt;log_file&lt;/code&gt; file defined in &lt;code&gt;config.yaml&lt;/code&gt; (default to &lt;code&gt;amigo_log.txt&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;amigo_log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Alerting with Amigo&lt;/h3&gt;
&lt;p&gt;Relevant reports (e.g., diff reports) are generated inside the directory defined as &lt;code&gt;results_dir&lt;/code&gt;, in the file &lt;code&gt;results.log&lt;/code&gt; (e.g., &lt;code&gt;/log/amigo.log&lt;/code&gt;). This is a JSON file that can be fed to ELK.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Creating Custom rules&lt;/h2&gt;
&lt;h3&gt;Firewalls Resource&lt;/h3&gt;
&lt;p&gt;Firewall reports have this format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;compute#firewall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;network&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://www.googleapis.com/compute/v1/projects/&amp;lt;name&amp;gt;/global/networks/default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;direction&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;INGRESS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;sourceRanges&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;0.0.0.0/0&amp;quot;&lt;/span&gt;
  &lt;span class="cp"&gt;]&lt;/span&gt;,
  &amp;quot;name&amp;quot;: &amp;quot;default-allow-icmp&amp;quot;,
  &amp;quot;priority&amp;quot;: 65534,
  &amp;quot;allowed&amp;quot;: &lt;span class="cp"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;IPProtocol&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;icmp&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="cp"&gt;]&lt;/span&gt;,
  &amp;quot;creationTimestamp&amp;quot;: &lt;span class="nt"&gt;&amp;lt;Time&lt;/span&gt; &lt;span class="na"&gt;stamp&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;,
  &amp;quot;id&amp;quot;: &lt;span class="nt"&gt;&amp;lt;ID&amp;gt;&lt;/span&gt;,
  &amp;quot;selfLink&amp;quot;: &amp;quot;https://www.googleapis.com/compute/v1/projects/&lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;/global/firewalls/default-allow-icmp&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;Allow ICMP from anywhere&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Networks Resource&lt;/h3&gt;
&lt;p&gt;Snapshot reports have this format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;compute#network&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Default network for the project&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;subnetworks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;https://www.googleapis.com/compute/v1/projects/&amp;lt;name&amp;gt;/regions/&amp;lt;region&amp;gt;/subnetworks/default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="cp"&gt;]&lt;/span&gt;,
  &amp;quot;autoCreateSubnetworks&amp;quot;: true,
  &amp;quot;routingConfig&amp;quot;: {
    &amp;quot;routingMode&amp;quot;: &amp;quot;REGIONAL&amp;quot;
  },
  &amp;quot;creationTimestamp&amp;quot;: &lt;span class="nt"&gt;&amp;lt;Time&lt;/span&gt; &lt;span class="na"&gt;stamp&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;,
  &amp;quot;id&amp;quot;: &lt;span class="nt"&gt;&amp;lt;ID&amp;gt;&lt;/span&gt;,
  &amp;quot;selfLink&amp;quot;: &amp;quot;https://www.googleapis.com/compute/v1/projects/&lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;/global/networks/default&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Snapshots Resource&lt;/h3&gt;
&lt;p&gt;Snapshot reports have this format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;READY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;compute#snapshot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;storageBytes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;sourceDisk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://www.googleapis.com/compute/v1/projects/&amp;lt;name&amp;gt;/zones/us-central1-c/disks/deployhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;storageBytesStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;UP_TO_DATE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;labelFingerprint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;sourceDiskId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;diskSizeGb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;size&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;licenses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;https://www.googleapis.com/compute/v1/projects/centos-cloud/global/licenses/centos-7&amp;quot;&lt;/span&gt;
  &lt;span class="cp"&gt;]&lt;/span&gt;,
  &amp;quot;creationTimestamp&amp;quot;: &lt;span class="nt"&gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;stamp&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;,
  &amp;quot;id&amp;quot;: &lt;span class="nt"&gt;&amp;lt;ID&amp;gt;&lt;/span&gt;,
  &amp;quot;selfLink&amp;quot;: &amp;quot;https://www.googleapis.com/compute/v1/projects/&lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;/global/snapshots/snapshot-1-deployhost&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Instance Template Resource&lt;/h3&gt;
&lt;p&gt;Instance Template reports have this format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;compute#instanceTemplate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;machineType&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;items&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;]&lt;/span&gt;
    },
    &amp;quot;disks&amp;quot;: &lt;span class="cp"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;deviceName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;persistent-disk-0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;compute#attachedDisk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;initializeParams&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;sourceImage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;global/images/&amp;lt;name&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;diskType&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pd-standard&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;autoDelete&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;boot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;READ_WRITE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;interface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SCSI&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PERSISTENT&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="cp"&gt;]&lt;/span&gt;,
    &amp;quot;scheduling&amp;quot;: {
      &amp;quot;automaticRestart&amp;quot;: true,
      &amp;quot;preemptible&amp;quot;: false,
      &amp;quot;onHostMaintenance&amp;quot;: &amp;quot;MIGRATE&amp;quot;
    },
    &amp;quot;serviceAccounts&amp;quot;: &lt;span class="cp"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;scopes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;https://www.googleapis.com/auth/compute.readonly&amp;quot;&lt;/span&gt;
        &lt;span class="cp"&gt;]&lt;/span&gt;,
        &amp;quot;email&amp;quot;: &lt;span class="nt"&gt;&amp;lt;service&lt;/span&gt;&lt;span class="na"&gt;-account-email&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      }
    ],
    &amp;quot;metadata&amp;quot;: {
      &amp;quot;items&amp;quot;: &lt;span class="cp"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;compute#metadata&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;creationTimestamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2017-11-14T12:24:00.744-08:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;selfLink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://www.googleapis.com/compute/v1/projects/&amp;lt;project-name&amp;gt;/global/instanceTemplates/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Sat, 17 Dec 2016 00:00:00 -0500</pubDate><guid>tag:bt3gl.github.io,2016-12-17:introducing-amigo-a-tool-to-manage-google-cloud-platform-security.html</guid></item><item><title>Quick &amp; Dirty iOS ARKit with "Post Malone Balloon"</title><link>http://bt3gl.github.io/quick-dirty-ios-arkit-with-post-malone-balloon.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/post_1.jpg" width="400px" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Augmented reality (AR) describes user experiences that add 2D or 3D elements to the live view from a device’s camera in a way that makes those elements appear to inhabit the real world.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Hi Everyone!&lt;/p&gt;
&lt;p&gt;In this post, I show how neat is to write an AR iOS application with &lt;a href="https://developer.apple.com/arkit/"&gt;ARKit&lt;/a&gt;, a framework that provides you high-level classes for &lt;strong&gt;tracking&lt;/strong&gt;, &lt;strong&gt;scene understanding&lt;/strong&gt;, and &lt;strong&gt;rendering&lt;/strong&gt;. More specifically, ARKit is a session-based framework. This means that everything will happen in a concrete session. Sessions are a way of encapsulating the logic and data contained within a defined period of the applications activity. It relates the virtual objects with the real world by means of the Tracking.&lt;/p&gt;
&lt;p&gt;This app runs an ARKit world tracking session with content displayed in a &lt;a href="https://developer.apple.com/documentation/spriteKit"&gt;SpriteKit&lt;/a&gt; 2D view. Every session has a scene that will render the virtual objects in the real world, accessed using the iOS device sensors.&lt;/p&gt;
&lt;p&gt;But, before everything, I recommend you to watch &lt;a href="https://developer.apple.com/videos/play/wwdc2017/602/"&gt;WWDC 2017's 'Introducing ARKit: Augmented Reality for iOS'&lt;/a&gt;. It gives a nice overview of ARKit's capabilities.&lt;/p&gt;
&lt;p&gt;Ah, btw, the source code for this project is &lt;a href="https://github.com/bt3gl/AR_PostMalone"&gt;available for you at github&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;The source code for AR_PostMalone the following structure:&lt;/h2&gt;
&lt;h3&gt;&lt;code&gt;Info.plist&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;An information property list file is an XML file that contains essential configuration information for a bundled executable. Example of the information you want to add is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The name of your app (&lt;code&gt;&amp;lt;string&amp;gt;PostMaloneBalloon&amp;lt;/string&amp;gt;&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Camera usage (&lt;code&gt;&amp;lt;key&amp;gt;NSCameraUsageDescription&amp;lt;/key&amp;gt;&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Frameworks you need (&lt;code&gt;&amp;lt;key&amp;gt;UIRequiredDeviceCapabilities&amp;lt;/key&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;string&amp;gt;armv7&amp;lt;/string&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;string&amp;gt;arkit&amp;lt;/string&amp;gt;&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;Assets.xcassets&lt;/code&gt; directory&lt;/h3&gt;
&lt;p&gt;Where you place assets such as the images used in your App (Post Malone head) and icons. A file &lt;code&gt;Content.json&lt;/code&gt; is placed inside every directory to describe the assets.&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;Base.lproj&lt;/code&gt; directory&lt;/h3&gt;
&lt;p&gt;Contains two &lt;a href="https://www.raywenderlich.com/160521/storyboards-tutorial-ios-11-part-1"&gt;story board files&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LaunchScreen.storyboard&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Main.storyboard&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;Scene.swift&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Anchors are 3D points that correspond to real-world features that ARKit detects. Anchors are created in this class, together with the Sprite scene (Scene.sks). The class &lt;code&gt;Scene&lt;/code&gt; controls how the App is operating within the scenes. Rendering brings tracking and scene understanding together with your content.&lt;/p&gt;
&lt;p&gt;For our App, we are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Defining the method &lt;code&gt;touchesBegan&lt;/code&gt;, where we define what happens when we click the scene.&lt;/li&gt;
&lt;li&gt;The sequence of movements is defined by &lt;code&gt;let sequence = SKAction.sequence([popSound, moveDown, moveDownFloating, moveToBottom])&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When you touch the scene, a Post Malone Balloon head appears and starts to behave as a balloon (&lt;code&gt;moveDownFloating = ((arc4random() % 2)==0) ? moveLeftDown : moveRightDown&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;The balloon either pops (&lt;code&gt;let popSound = SKAction.playSoundFileNamed("pop", waitForCompletion: false)&lt;/code&gt;) or fades after a second (&lt;code&gt;fadeOut = SKAction.fadeOut(withDuration: 1.0)&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;An ARAnchor uses a 4×4 matrix that represents the combined position, rotation or orientation, and scale of an object in three-dimensional space (as in &lt;code&gt;var translation = matrix_identity_float4x4&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;ViewController.swift&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This view is managed by the class ViewController, which inherits from &lt;code&gt;ARSKViewDelegate&lt;/code&gt; so that we can create a &lt;code&gt;sceneView&lt;/code&gt; variable. This class has methods for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Views&lt;/li&gt;
&lt;li&gt;Scaling and placing the view.&lt;/li&gt;
&lt;li&gt;View when it loads (and load the pre-defined scene from &lt;a href="https://developer.apple.com/documentation/spritekit/skscene"&gt;SKScene&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;View to appear and disappear.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sessions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Session interrupted.&lt;/li&gt;
&lt;li&gt;Session ended.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;AppDelegate.swift&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This is where we call the class &lt;code&gt;AppDelegate&lt;/code&gt;, which responds for &lt;code&gt;UIApplicationMain&lt;/code&gt;. In this class, we create a variable that will work as the window UI, and we have UI methods for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See if the application is about to move from active to inactive state (for example, pause ongoing tasks).&lt;/li&gt;
&lt;li&gt;Release shared resources and save user data.&lt;/li&gt;
&lt;li&gt;Change from the background to the active state.&lt;/li&gt;
&lt;li&gt;Restart any tasks that were paused while the application was inactive.&lt;/li&gt;
&lt;li&gt;Termination actions for when the application is about to terminate (for example, to save data if appropriate).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Some Terminology&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Field of view&lt;/strong&gt;: measured in degrees, is the extent of the observable world that is seen at any given moment (humans have a FOV of around 180°, but most HMDs offer between 50 and 110°).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Latency&lt;/strong&gt;: In VR, a 20-millisecond latency is considered low and acceptable for a comfortable experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Haptics&lt;/strong&gt;: recreate the sense of touch by applying forces, vibrations, or motions to the user, through feedback devices (example, vibrating game controllers).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stitching&lt;/strong&gt;: the process of combining multiple video sources with overlapping fields of view to produce a fully immersive 360°. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Visual Inertial Odometry&lt;/strong&gt;: ARKit analyzes the phone camera and motion data in order to keep track of the world around the
ARSession object that manages the motion tracking and image processing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Fri, 16 Dec 2016 00:00:00 -0500</pubDate><guid>tag:bt3gl.github.io,2016-12-16:quick-dirty-ios-arkit-with-post-malone-balloon.html</guid></item><item><title>Spin up a Node.JS Server in Kubernetes in 10 Minutes</title><link>http://bt3gl.github.io/spin-up-a-nodejs-server-in-kubernetes-in-10-minutes.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/13.jpg" width="400px" /&gt;&lt;/p&gt;
&lt;p&gt;Hey everyone!&lt;/p&gt;
&lt;p&gt;I wrote this quick guide to help you to get started with k8s in 10 min.&lt;/p&gt;
&lt;p&gt;In this guide, I show you how to spin a quick &lt;code&gt;Node.js&lt;/code&gt; server in Kubernetes and to grasp some of its main concepts. &lt;a href="https://github.com/bt3gl/k8s_security"&gt;Here is the source code&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Install kubectl&lt;/h3&gt;
&lt;p&gt;First, you will need to install &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/"&gt;kubectl&lt;/a&gt; in your machine.&lt;/p&gt;
&lt;p&gt;Make sure you have all the auths right; for instance, I do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an auth token and move to &lt;code&gt;~/.kube&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a config file and move to &lt;code&gt;~/.kube&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Spinning up a Hello World node server in docker&lt;/h3&gt;
&lt;p&gt;Download &lt;a href="https://github.com/bt3gl/intro_to_k8s/tree/master/node_server_example"&gt;this code&lt;/a&gt; and build the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, just run the container:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;node_app_test&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check whether the server is up:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;curl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Voilà!&lt;/p&gt;
&lt;p&gt;You can also check the status of your setup with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Other useful Docker commands&lt;/h4&gt;
&lt;p&gt;Exec inside the container:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check images in disk:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Pushing the Registry to Kubernetes&lt;/h3&gt;
&lt;p&gt;In a real production system, we’ll want to build images in one place, then run these images in the Kubernetes cluster. &lt;/p&gt;
&lt;p&gt;The system that images for distribution is called a &lt;strong&gt;container registry&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Using a &lt;code&gt;yaml&lt;/code&gt; Kubernetes files (for example, the one inside &lt;code&gt;node_server_example/&lt;/code&gt;), you can now deploy the image with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;node_example_kube_config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yaml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that, you are able to create the service with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;expose&lt;/span&gt; &lt;span class="n"&gt;deployment&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also, check out the service status with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Clean up&lt;/h3&gt;
&lt;p&gt;Removing the service and the deployment when you are done:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;deployment&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Useful General Commands&lt;/h2&gt;
&lt;p&gt;Checking out pods:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;pods&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;namespace&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Checking deployments:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;deployments&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;namespace&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Checking services:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;namespace&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Get more information about a pod:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;kubectl&lt;/span&gt; &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="n"&gt;pod&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;namespace&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pod&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Some References:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#general-guidelines-and-recommendations"&gt;Dockerfiles good practices&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Tue, 13 Dec 2016 00:00:00 -0500</pubDate><guid>tag:bt3gl.github.io,2016-12-13:spin-up-a-nodejs-server-in-kubernetes-in-10-minutes.html</guid></item><item><title>18 Tips for Website Performance</title><link>http://bt3gl.github.io/18-tips-for-website-performance.html</link><description>&lt;p&gt;&lt;img alt="cyberpunk" height="300px" src="./cyberpunk/16.jpg" width="400px" /&gt;&lt;/p&gt;
&lt;h2&gt;1. Test your Website’s Speed&lt;/h2&gt;
&lt;p&gt;Use a website speed test tool to analyze the overall speed of your website. For instance, &lt;a href="https://tools.keycdn.com/speed"&gt;KeyCDN’s website speed test tool&lt;/a&gt; or &lt;a href="http://www.webpagetest.org/"&gt;WebPageTest&lt;/a&gt; can useful (and they both support HTTP/2). You could also use a &lt;a href="https://www.ej-technologies.com/products/jprofiler/overview.html"&gt;JavaScript&lt;/a&gt; profiler.&lt;/p&gt;
&lt;h2&gt;2. Load Test Your Site&lt;/h2&gt;
&lt;p&gt;Load test your website to check for any bottlenecks. Some cool tools for this task:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.blitz.io/"&gt;Blirz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wondernetwork.com/loadtesting"&gt;Wonder Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://loadimpact.com/"&gt;Load Impact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://loader.io/"&gt;Loader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3. Use Performance Tools&lt;/h2&gt;
&lt;p&gt;You can check how fast in seconds you want your site to load, on certain connection speed, with this &lt;a href="http://www.performancebudget.io/"&gt;free Budget Calculator tool&lt;/a&gt;, depending on the number of resources (HTML, images, JS, CSS, fonts, etc.).&lt;/p&gt;
&lt;p&gt;Additionally, check &lt;a href="https://developers.google.com/speed/"&gt;Google's performance resources&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;4. Reduce the number of HTTP Requests&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If your JS code is small enough, you can have it inline.&lt;/li&gt;
&lt;li&gt;Reduce the number of third-party plugins and frameworks.&lt;/li&gt;
&lt;li&gt;Have less code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;5. Clean up your JS and CSS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove unnecessary characters (whitespace, new line, comments).&lt;/li&gt;
&lt;li&gt;Some useful tools are &lt;a href="https://www.npmjs.com/package/gulp-uglify"&gt;grunt ugligy&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/gulp-clean-css"&gt;gulp-clean-css&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;6. Avoid Redirects&lt;/h2&gt;
&lt;p&gt;301 redirects will damage the performance of your website because they generate additional round trip times (RTT) before the browser even starts to load other assets.&lt;/p&gt;
&lt;h2&gt;7. Image Optimization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use compression tools such as &lt;a href="https://github.com/toy/image_optim"&gt;image_optim&lt;/a&gt;, &lt;a href="https://tinypng.com/"&gt;tinypgn&lt;/a&gt;, &lt;a href="https://pngmini.com/"&gt;pngmini&lt;/a&gt;, &lt;a href="https://www.jpegmini.com"&gt;jpegmini&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use responsive images in HTML with &lt;strong&gt;&lt;em&gt;srcset&lt;/em&gt;&lt;/strong&gt; and sizes attributes to serve different scaled images, based on the size of the display.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;8. Render Blocking Resources blocking the DOM&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;&lt;em&gt;Document Object Model&lt;/em&gt;&lt;/strong&gt; is a programming interface for HTML and XML documents that provide a structured representation (node tree) of a document, defining ways it can be accessed and manipulated using scripting languages such as Javascript. To ensure that the DOM loads in a responsive time, render-blocking resources should get to the client as soon and as quickly as possible.&lt;/p&gt;
&lt;p&gt;Here some tips for DOM resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;Use &lt;a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path"&gt;media queries&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Concatenate all CSS files in one.&lt;/li&gt;
&lt;li&gt;Remove extra spaces, characters, comments, etc.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check &lt;a href="https://github.com/postcss/autoprefixer"&gt;Autoprefixer &lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;&lt;em&gt;async&lt;/em&gt;&lt;/strong&gt; tag allows the script to be downloaded in the background without blocking.&lt;/li&gt;
&lt;li&gt;Move JS scripts to the bottom of the page, right before the &lt;/body&gt; tag.&lt;/li&gt;
&lt;li&gt;Concatenate all JS files in one.&lt;/li&gt;
&lt;li&gt;Remove extra spaces, characters, comments, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;9. Reduce Latency with a CDN.&lt;/h2&gt;
&lt;p&gt;You can test the latency of your website by using sending out ICMP packets to its address (by ping in your terminal or &lt;a href="https://tools.keycdn.com/ping"&gt;UI tools&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Content Delivery Networks are servers that maintain cached copies of the content of a website (images, CSS, JS, fonts), so that they can be retrieved from the closest physical location for reduced latency. Here some nice guides for &lt;a href="https://www.keycdn.com/support/google-cloud-storage-cdn-integration/"&gt;google cloud storage&lt;/a&gt; and &lt;a href="https://www.keycdn.com/support/aws-s3-cdn-integration/"&gt;AWS S3&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;10. Time to first byte (TTFB)&lt;/h2&gt;
&lt;p&gt;TTFB is the measurement of the responsiveness of a web server, as the time that takes for the browser to start receiving information after it has requested it from the server.&lt;/p&gt;
&lt;p&gt;TTFB is calculated as &lt;strong&gt;HTTP request time + Process request time + HTTP response time&lt;/strong&gt;, and can be check at the &lt;a href="https://developers.google.com/web/tools/chrome-devtools/"&gt;Chrome Dev Tools&lt;/a&gt; (the green bar).&lt;/p&gt;
&lt;h2&gt;11. Browser Cache&lt;/h2&gt;
&lt;p&gt;Let the browser cache some data (with a max-age of a week) by using HTTP headers such as &lt;strong&gt;&lt;em&gt;Cache-control&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Expires&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;12. Prefetching&lt;/h2&gt;
&lt;p&gt;DNS prefetching can be a good solution to resolve domain names before a user follows a link. It's implemented in the &lt;strong&gt;&lt;em&gt;HEADER&lt;/em&gt;&lt;/strong&gt; session with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dns-prefetch&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//www.example.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;13. Preconnecting&lt;/h2&gt;
&lt;p&gt;With the &lt;strong&gt;&lt;em&gt;preconnect&lt;/em&gt;&lt;/strong&gt; label, the browser can set up early connections (such as DNS lookup, TLS negotiation, etc.) before an HTTP request is sent to the server. This can be implemented with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//CDNHOST.com&amp;#39; rel=&amp;#39;preconnect&amp;#39; crossorigin&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;14. HTTP/2&lt;/h2&gt;
&lt;p&gt;HTTP/2 comes with a huge performance benefit. To enable HTTP/2, one needs an SSL certificate and a server that supports HTTP/2.&lt;/p&gt;
&lt;h2&gt;15. Hotlink Protection&lt;/h2&gt;
&lt;p&gt;Hotlink protection is given by restricting HTTP referrers so that one can prevent others from embedding assets on other websites (protecting site's bandwidth). To use it, one needs to place the code below in a &lt;code&gt;.htaccess&lt;/code&gt; file (Apache):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;RewriteEngine&lt;/span&gt; &lt;span class="n"&gt;On&lt;/span&gt;
&lt;span class="n"&gt;RewriteCond&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;HTTP_REFERER&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;!^&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//(.+\.)?domain\.com/ [NC]&lt;/span&gt;
&lt;span class="n"&gt;RewriteCond&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;HTTP_REFERER&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;!^&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="n"&gt;RewriteRule&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;jpe&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;gif&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bmp&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//i.imgur.com/DONT_DISPLAY.gif [L]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;16. Enable Gzip Compression&lt;/h2&gt;
&lt;p&gt;Gzip compresses web pages, CSS, and JS code at the server level, before sending them over to the browser, to optimize the website performance. This is enabled in the &lt;code&gt;.htaccess&lt;/code&gt; file (Apache) or &lt;code&gt;nginx.conf&lt;/code&gt; (Nginx).&lt;/p&gt;
&lt;h2&gt;17. Optimizing Video&lt;/h2&gt;
&lt;p&gt;Matching the file type to the optimal platform reduces playback issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.mp4&lt;/code&gt; is a good quality video with a small file size and is the recommended format for YouTube and Vimeo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.mov&lt;/code&gt; is a high-quality video with a large file size. This file type doesn't play on windows without the help of VLC.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.wmv&lt;/code&gt; is a good quality video with a large file size. It is also hard to play this format on Mac machines unless you have VLC.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.flv&lt;/code&gt; is a small file size, but need extra steps to bring up the quality. This format doesn’t play natively on most Mac and Windows machines.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are plenty of programs that will reformat videos, rearranging file settings for faster playback, which helps them stream more smoothly across a multitude of devices. For instance, &lt;a href="https://handbrake.fr/"&gt;Handbrake&lt;/a&gt;, is a useful open-source video transcoder.&lt;/p&gt;
&lt;h2&gt;18. Automate&lt;/h2&gt;
&lt;p&gt;Have a &lt;a href="https://en.wikipedia.org/wiki/Continuous_delivery"&gt;Continuous Delivery&lt;/a&gt; pipeline, which includes profiling and performance analysis of acceptance and load tests.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Steinkirch</dc:creator><pubDate>Mon, 12 Dec 2016 00:00:00 -0500</pubDate><guid>tag:bt3gl.github.io,2016-12-12:18-tips-for-website-performance.html</guid></item></channel></rss>